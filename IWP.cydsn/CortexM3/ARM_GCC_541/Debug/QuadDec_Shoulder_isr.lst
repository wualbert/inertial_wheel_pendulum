ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"QuadDec_Shoulder_isr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.QuadDec_Shoulder_isr_Start,"ax",%progbits
  20              		.align	2
  21              		.global	QuadDec_Shoulder_isr_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	QuadDec_Shoulder_isr_Start, %function
  25              	QuadDec_Shoulder_isr_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\QuadDec_Shoulder_isr.c"
   1:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * File Name: QuadDec_Shoulder_isr.c  
   3:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Version 1.70
   4:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
   5:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  Description:
   6:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
   8:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
   9:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  Note:
  10:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
  11:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
  12:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  18:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  19:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #include <QuadDec_Shoulder_isr.h>
  22:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  23:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  24:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #if !defined(QuadDec_Shoulder_isr__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  26:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /* `#START QuadDec_Shoulder_isr_intc` */
  30:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 2


  31:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /* `#END` */
  32:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  33:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #ifndef CYINT_IRQ_BASE
  34:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #define CYINT_IRQ_BASE      16
  35:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #endif /* CYINT_IRQ_BASE */
  36:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #ifndef CYINT_VECT_TABLE
  37:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  38:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** #endif /* CYINT_VECT_TABLE */
  39:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  40:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /* Declared in startup, used to set unused interrupts to. */
  41:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** CY_ISR_PROTO(IntDefaultHandler);
  42:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  43:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  44:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_Start
  46:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
  47:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
  48:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
  49:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  50:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  sets the default interrupt vector, sets the priority from the value in the
  51:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  52:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  interrupt controller.
  53:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
  54:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:  
  55:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
  56:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
  57:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
  58:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
  59:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
  60:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
  61:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_Start(void)
  62:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
  28              		.loc 1 62 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  63:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* For all we know the interrupt is active. */
  64:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_Disable();
  38              		.loc 1 64 0
  39 0004 FFF7FEFF 		bl	QuadDec_Shoulder_isr_Disable
  65:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  66:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Set the ISR to point to the QuadDec_Shoulder_isr Interrupt. */
  67:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_SetVector(&QuadDec_Shoulder_isr_Interrupt);
  40              		.loc 1 67 0
  41 0008 0448     		ldr	r0, .L2
  42 000a FFF7FEFF 		bl	QuadDec_Shoulder_isr_SetVector
  68:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  69:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Set the priority. */
  70:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_SetPriority((uint8)QuadDec_Shoulder_isr_INTC_PRIOR_NUMBER);
  43              		.loc 1 70 0
  44 000e 0720     		movs	r0, #7
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 3


  45 0010 FFF7FEFF 		bl	QuadDec_Shoulder_isr_SetPriority
  71:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  72:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Enable it. */
  73:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_Enable();
  46              		.loc 1 73 0
  47 0014 FFF7FEFF 		bl	QuadDec_Shoulder_isr_Enable
  74:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
  48              		.loc 1 74 0
  49 0018 00BF     		nop
  50 001a 80BD     		pop	{r7, pc}
  51              	.L3:
  52              		.align	2
  53              	.L2:
  54 001c 00000000 		.word	QuadDec_Shoulder_isr_Interrupt
  55              		.cfi_endproc
  56              	.LFE0:
  57              		.size	QuadDec_Shoulder_isr_Start, .-QuadDec_Shoulder_isr_Start
  58              		.section	.text.QuadDec_Shoulder_isr_StartEx,"ax",%progbits
  59              		.align	2
  60              		.global	QuadDec_Shoulder_isr_StartEx
  61              		.thumb
  62              		.thumb_func
  63              		.type	QuadDec_Shoulder_isr_StartEx, %function
  64              	QuadDec_Shoulder_isr_StartEx:
  65              	.LFB1:
  75:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  76:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
  77:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
  78:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_StartEx
  79:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
  80:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
  81:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
  82:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  83:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  84:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  85:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  the interrupt to the interrupt controller.
  86:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  
  87:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  88:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  used to provide consistent definition across compilers:
  89:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  
  90:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *  Function definition example:
  91:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   CY_ISR(MyISR)
  92:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   {
  93:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   }
  94:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Function prototype example:
  95:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   CY_ISR_PROTO(MyISR);
  96:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
  97:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:  
  98:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
  99:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 100:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 101:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 102:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 103:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 104:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_StartEx(cyisraddress address)
 105:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
  66              		.loc 1 105 0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 4


  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
 106:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* For all we know the interrupt is active. */
 107:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_Disable();
  79              		.loc 1 107 0
  80 0008 FFF7FEFF 		bl	QuadDec_Shoulder_isr_Disable
 108:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 109:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Set the ISR to point to the QuadDec_Shoulder_isr Interrupt. */
 110:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_SetVector(address);
  81              		.loc 1 110 0
  82 000c 7868     		ldr	r0, [r7, #4]
  83 000e FFF7FEFF 		bl	QuadDec_Shoulder_isr_SetVector
 111:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 112:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Set the priority. */
 113:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_SetPriority((uint8)QuadDec_Shoulder_isr_INTC_PRIOR_NUMBER);
  84              		.loc 1 113 0
  85 0012 0720     		movs	r0, #7
  86 0014 FFF7FEFF 		bl	QuadDec_Shoulder_isr_SetPriority
 114:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 115:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Enable it. */
 116:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_Enable();
  87              		.loc 1 116 0
  88 0018 FFF7FEFF 		bl	QuadDec_Shoulder_isr_Enable
 117:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
  89              		.loc 1 117 0
  90 001c 00BF     		nop
  91 001e 0837     		adds	r7, r7, #8
  92              		.cfi_def_cfa_offset 8
  93 0020 BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 0022 80BD     		pop	{r7, pc}
  97              		.cfi_endproc
  98              	.LFE1:
  99              		.size	QuadDec_Shoulder_isr_StartEx, .-QuadDec_Shoulder_isr_StartEx
 100              		.section	.text.QuadDec_Shoulder_isr_Stop,"ax",%progbits
 101              		.align	2
 102              		.global	QuadDec_Shoulder_isr_Stop
 103              		.thumb
 104              		.thumb_func
 105              		.type	QuadDec_Shoulder_isr_Stop, %function
 106              	QuadDec_Shoulder_isr_Stop:
 107              	.LFB2:
 118:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 119:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 120:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 121:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_Stop
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 5


 122:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 123:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 124:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 125:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Disables and removes the interrupt.
 126:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 127:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:  
 128:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 129:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 130:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 131:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 132:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 133:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 134:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_Stop(void)
 135:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 108              		.loc 1 135 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 136:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Disable this interrupt. */
 137:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_Disable();
 118              		.loc 1 137 0
 119 0004 FFF7FEFF 		bl	QuadDec_Shoulder_isr_Disable
 138:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 139:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Set the ISR to point to the passive one. */
 140:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     QuadDec_Shoulder_isr_SetVector(&IntDefaultHandler);
 120              		.loc 1 140 0
 121 0008 0248     		ldr	r0, .L6
 122 000a FFF7FEFF 		bl	QuadDec_Shoulder_isr_SetVector
 141:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 123              		.loc 1 141 0
 124 000e 00BF     		nop
 125 0010 80BD     		pop	{r7, pc}
 126              	.L7:
 127 0012 00BF     		.align	2
 128              	.L6:
 129 0014 00000000 		.word	IntDefaultHandler
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	QuadDec_Shoulder_isr_Stop, .-QuadDec_Shoulder_isr_Stop
 133              		.section	.text.QuadDec_Shoulder_isr_Interrupt,"ax",%progbits
 134              		.align	2
 135              		.global	QuadDec_Shoulder_isr_Interrupt
 136              		.thumb
 137              		.thumb_func
 138              		.type	QuadDec_Shoulder_isr_Interrupt, %function
 139              	QuadDec_Shoulder_isr_Interrupt:
 140              	.LFB3:
 142:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 143:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 144:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 145:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_Interrupt
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 6


 146:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 147:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 148:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 149:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   The default Interrupt Service Routine for QuadDec_Shoulder_isr.
 150:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 151:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Add custom code between the coments to keep the next version of this file
 152:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   from over writting your code.
 153:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 154:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:  
 155:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 156:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 157:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 158:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 159:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 160:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** CY_ISR(QuadDec_Shoulder_isr_Interrupt)
 161:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 141              		.loc 1 161 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 162:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     #ifdef QuadDec_Shoulder_isr_INTERRUPT_INTERRUPT_CALLBACK
 163:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****         QuadDec_Shoulder_isr_Interrupt_InterruptCallback();
 164:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     #endif /* QuadDec_Shoulder_isr_INTERRUPT_INTERRUPT_CALLBACK */ 
 165:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 166:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /*  Place your Interrupt code here. */
 167:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* `#START QuadDec_Shoulder_isr_Interrupt` */
 168:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 169:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* `#END` */
 170:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 151              		.loc 1 170 0
 152 0004 00BF     		nop
 153 0006 BD46     		mov	sp, r7
 154              		.cfi_def_cfa_register 13
 155              		@ sp needed
 156 0008 80BC     		pop	{r7}
 157              		.cfi_restore 7
 158              		.cfi_def_cfa_offset 0
 159 000a 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE3:
 162              		.size	QuadDec_Shoulder_isr_Interrupt, .-QuadDec_Shoulder_isr_Interrupt
 163              		.section	.text.QuadDec_Shoulder_isr_SetVector,"ax",%progbits
 164              		.align	2
 165              		.global	QuadDec_Shoulder_isr_SetVector
 166              		.thumb
 167              		.thumb_func
 168              		.type	QuadDec_Shoulder_isr_SetVector, %function
 169              	QuadDec_Shoulder_isr_SetVector:
 170              	.LFB4:
 171:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 172:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 7


 173:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 174:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_SetVector
 175:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 176:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 177:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 178:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Change the ISR vector for the Interrupt. Note calling QuadDec_Shoulder_isr_Start
 179:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   will override any effect this method would have had. To set the vector 
 180:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   before the component has been started use QuadDec_Shoulder_isr_StartEx instead.
 181:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * 
 182:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 183:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   used to provide consistent definition across compilers:
 184:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 185:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Function definition example:
 186:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   CY_ISR(MyISR)
 187:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   {
 188:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   }
 189:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 190:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Function prototype example:
 191:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *     CY_ISR_PROTO(MyISR);
 192:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 193:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 194:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
 195:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 196:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 197:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 198:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 199:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 200:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_SetVector(cyisraddress address)
 201:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 171              		.loc 1 201 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 80B4     		push	{r7}
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 85B0     		sub	sp, sp, #20
 180              		.cfi_def_cfa_offset 24
 181 0004 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 183 0006 7860     		str	r0, [r7, #4]
 202:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     cyisraddress * ramVectorTable;
 203:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 204:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 184              		.loc 1 204 0
 185 0008 054B     		ldr	r3, .L10
 186 000a 1B68     		ldr	r3, [r3]
 187 000c FB60     		str	r3, [r7, #12]
 205:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 206:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)QuadDec_Shoulder_isr__INTC_NUMBER] = address;
 188              		.loc 1 206 0
 189 000e FB68     		ldr	r3, [r7, #12]
 190 0010 4833     		adds	r3, r3, #72
 191 0012 7A68     		ldr	r2, [r7, #4]
 192 0014 1A60     		str	r2, [r3]
 207:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 8


 193              		.loc 1 207 0
 194 0016 00BF     		nop
 195 0018 1437     		adds	r7, r7, #20
 196              		.cfi_def_cfa_offset 4
 197 001a BD46     		mov	sp, r7
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 001c 80BC     		pop	{r7}
 201              		.cfi_restore 7
 202              		.cfi_def_cfa_offset 0
 203 001e 7047     		bx	lr
 204              	.L11:
 205              		.align	2
 206              	.L10:
 207 0020 08ED00E0 		.word	-536810232
 208              		.cfi_endproc
 209              	.LFE4:
 210              		.size	QuadDec_Shoulder_isr_SetVector, .-QuadDec_Shoulder_isr_SetVector
 211              		.section	.text.QuadDec_Shoulder_isr_GetVector,"ax",%progbits
 212              		.align	2
 213              		.global	QuadDec_Shoulder_isr_GetVector
 214              		.thumb
 215              		.thumb_func
 216              		.type	QuadDec_Shoulder_isr_GetVector, %function
 217              	QuadDec_Shoulder_isr_GetVector:
 218              	.LFB5:
 208:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 209:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 210:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_GetVector
 212:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 213:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 214:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 215:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 216:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 217:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 218:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 219:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 220:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 221:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Address of the ISR in the interrupt vector table.
 222:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 223:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 224:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** cyisraddress QuadDec_Shoulder_isr_GetVector(void)
 225:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 219              		.loc 1 225 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 0000 80B4     		push	{r7}
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 226:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     cyisraddress * ramVectorTable;
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 9


 227:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 228:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 231              		.loc 1 228 0
 232 0006 054B     		ldr	r3, .L14
 233 0008 1B68     		ldr	r3, [r3]
 234 000a 7B60     		str	r3, [r7, #4]
 229:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 230:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)QuadDec_Shoulder_isr__INTC_NUMBER];
 235              		.loc 1 230 0
 236 000c 7B68     		ldr	r3, [r7, #4]
 237 000e 9B6C     		ldr	r3, [r3, #72]
 231:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 238              		.loc 1 231 0
 239 0010 1846     		mov	r0, r3
 240 0012 0C37     		adds	r7, r7, #12
 241              		.cfi_def_cfa_offset 4
 242 0014 BD46     		mov	sp, r7
 243              		.cfi_def_cfa_register 13
 244              		@ sp needed
 245 0016 80BC     		pop	{r7}
 246              		.cfi_restore 7
 247              		.cfi_def_cfa_offset 0
 248 0018 7047     		bx	lr
 249              	.L15:
 250 001a 00BF     		.align	2
 251              	.L14:
 252 001c 08ED00E0 		.word	-536810232
 253              		.cfi_endproc
 254              	.LFE5:
 255              		.size	QuadDec_Shoulder_isr_GetVector, .-QuadDec_Shoulder_isr_GetVector
 256              		.section	.text.QuadDec_Shoulder_isr_SetPriority,"ax",%progbits
 257              		.align	2
 258              		.global	QuadDec_Shoulder_isr_SetPriority
 259              		.thumb
 260              		.thumb_func
 261              		.type	QuadDec_Shoulder_isr_SetPriority, %function
 262              	QuadDec_Shoulder_isr_SetPriority:
 263              	.LFB6:
 232:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 233:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 234:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_SetPriority
 236:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 237:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 238:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 239:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Sets the Priority of the Interrupt. 
 240:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 241:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Note calling QuadDec_Shoulder_isr_Start or QuadDec_Shoulder_isr_StartEx will 
 242:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   override any effect this API would have had. This API should only be called
 243:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   after QuadDec_Shoulder_isr_Start or QuadDec_Shoulder_isr_StartEx has been called. 
 244:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 245:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Interrupt Editor.
 246:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 247:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 248:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 249:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 250:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   priority: Priority of the interrupt, 0 being the highest priority
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 10


 251:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 252:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *             PSoC 4: Priority is from 0 to 3.
 253:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 254:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 255:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 256:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 257:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 258:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_SetPriority(uint8 priority)
 259:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 264              		.loc 1 259 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 80B4     		push	{r7}
 270              		.cfi_def_cfa_offset 4
 271              		.cfi_offset 7, -4
 272 0002 83B0     		sub	sp, sp, #12
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 276 0006 0346     		mov	r3, r0
 277 0008 FB71     		strb	r3, [r7, #7]
 260:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     *QuadDec_Shoulder_isr_INTC_PRIOR = priority << 5;
 278              		.loc 1 260 0
 279 000a 054A     		ldr	r2, .L17
 280 000c FB79     		ldrb	r3, [r7, #7]
 281 000e 5B01     		lsls	r3, r3, #5
 282 0010 DBB2     		uxtb	r3, r3
 283 0012 1370     		strb	r3, [r2]
 261:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 284              		.loc 1 261 0
 285 0014 00BF     		nop
 286 0016 0C37     		adds	r7, r7, #12
 287              		.cfi_def_cfa_offset 4
 288 0018 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 001a 80BC     		pop	{r7}
 292              		.cfi_restore 7
 293              		.cfi_def_cfa_offset 0
 294 001c 7047     		bx	lr
 295              	.L18:
 296 001e 00BF     		.align	2
 297              	.L17:
 298 0020 02E400E0 		.word	-536812542
 299              		.cfi_endproc
 300              	.LFE6:
 301              		.size	QuadDec_Shoulder_isr_SetPriority, .-QuadDec_Shoulder_isr_SetPriority
 302              		.section	.text.QuadDec_Shoulder_isr_GetPriority,"ax",%progbits
 303              		.align	2
 304              		.global	QuadDec_Shoulder_isr_GetPriority
 305              		.thumb
 306              		.thumb_func
 307              		.type	QuadDec_Shoulder_isr_GetPriority, %function
 308              	QuadDec_Shoulder_isr_GetPriority:
 309              	.LFB7:
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 11


 262:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 263:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 264:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 265:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_GetPriority
 266:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 267:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 268:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 269:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Gets the Priority of the Interrupt.
 270:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 271:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 272:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 273:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 274:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 275:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Priority of the interrupt, 0 being the highest priority
 276:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 277:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *    PSoC 4: Priority is from 0 to 3.
 278:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 279:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 280:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** uint8 QuadDec_Shoulder_isr_GetPriority(void)
 281:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 310              		.loc 1 281 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 8
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315 0000 80B4     		push	{r7}
 316              		.cfi_def_cfa_offset 4
 317              		.cfi_offset 7, -4
 318 0002 83B0     		sub	sp, sp, #12
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              		.cfi_def_cfa_register 7
 282:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     uint8 priority;
 283:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 284:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 285:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     priority = *QuadDec_Shoulder_isr_INTC_PRIOR >> 5;
 322              		.loc 1 285 0
 323 0006 054B     		ldr	r3, .L21
 324 0008 1B78     		ldrb	r3, [r3]
 325 000a DBB2     		uxtb	r3, r3
 326 000c 5B09     		lsrs	r3, r3, #5
 327 000e FB71     		strb	r3, [r7, #7]
 286:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 287:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     return priority;
 328              		.loc 1 287 0
 329 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 330              		.loc 1 288 0
 331 0012 1846     		mov	r0, r3
 332 0014 0C37     		adds	r7, r7, #12
 333              		.cfi_def_cfa_offset 4
 334 0016 BD46     		mov	sp, r7
 335              		.cfi_def_cfa_register 13
 336              		@ sp needed
 337 0018 80BC     		pop	{r7}
 338              		.cfi_restore 7
 339              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 12


 340 001a 7047     		bx	lr
 341              	.L22:
 342              		.align	2
 343              	.L21:
 344 001c 02E400E0 		.word	-536812542
 345              		.cfi_endproc
 346              	.LFE7:
 347              		.size	QuadDec_Shoulder_isr_GetPriority, .-QuadDec_Shoulder_isr_GetPriority
 348              		.section	.text.QuadDec_Shoulder_isr_Enable,"ax",%progbits
 349              		.align	2
 350              		.global	QuadDec_Shoulder_isr_Enable
 351              		.thumb
 352              		.thumb_func
 353              		.type	QuadDec_Shoulder_isr_Enable, %function
 354              	QuadDec_Shoulder_isr_Enable:
 355              	.LFB8:
 289:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 290:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 291:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 292:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_Enable
 293:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 294:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 295:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 296:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 297:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 298:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   function, which sets the vector and the priority, has been called.
 299:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 300:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 301:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 302:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 303:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 304:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 305:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 306:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 307:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_Enable(void)
 308:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 356              		.loc 1 308 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 309:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Enable the general interrupt. */
 310:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     *QuadDec_Shoulder_isr_INTC_SET_EN = QuadDec_Shoulder_isr__INTC_MASK;
 366              		.loc 1 310 0
 367 0004 034B     		ldr	r3, .L24
 368 0006 0422     		movs	r2, #4
 369 0008 1A60     		str	r2, [r3]
 311:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 370              		.loc 1 311 0
 371 000a 00BF     		nop
 372 000c BD46     		mov	sp, r7
 373              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 13


 374              		@ sp needed
 375 000e 80BC     		pop	{r7}
 376              		.cfi_restore 7
 377              		.cfi_def_cfa_offset 0
 378 0010 7047     		bx	lr
 379              	.L25:
 380 0012 00BF     		.align	2
 381              	.L24:
 382 0014 00E100E0 		.word	-536813312
 383              		.cfi_endproc
 384              	.LFE8:
 385              		.size	QuadDec_Shoulder_isr_Enable, .-QuadDec_Shoulder_isr_Enable
 386              		.section	.text.QuadDec_Shoulder_isr_GetState,"ax",%progbits
 387              		.align	2
 388              		.global	QuadDec_Shoulder_isr_GetState
 389              		.thumb
 390              		.thumb_func
 391              		.type	QuadDec_Shoulder_isr_GetState, %function
 392              	QuadDec_Shoulder_isr_GetState:
 393              	.LFB9:
 312:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 313:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 314:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_GetState
 316:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 317:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 318:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 319:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 320:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 321:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 322:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 323:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 324:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 325:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   1 if enabled, 0 if disabled.
 326:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 327:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** uint8 QuadDec_Shoulder_isr_GetState(void)
 329:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 394              		.loc 1 329 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399 0000 80B4     		push	{r7}
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 7, -4
 402 0002 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 330:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Get the state of the general interrupt. */
 331:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     return ((*QuadDec_Shoulder_isr_INTC_SET_EN & (uint32)QuadDec_Shoulder_isr__INTC_MASK) != 0u) ? 
 404              		.loc 1 331 0
 405 0004 064B     		ldr	r3, .L30
 406 0006 1B68     		ldr	r3, [r3]
 407 0008 03F00403 		and	r3, r3, #4
 408 000c 002B     		cmp	r3, #0
 409 000e 01D0     		beq	.L27
 410              		.loc 1 331 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 14


 411 0010 0123     		movs	r3, #1
 412 0012 00E0     		b	.L28
 413              	.L27:
 414              		.loc 1 331 0 discriminator 2
 415 0014 0023     		movs	r3, #0
 416              	.L28:
 332:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 417              		.loc 1 332 0 is_stmt 1 discriminator 4
 418 0016 1846     		mov	r0, r3
 419 0018 BD46     		mov	sp, r7
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 001a 80BC     		pop	{r7}
 423              		.cfi_restore 7
 424              		.cfi_def_cfa_offset 0
 425 001c 7047     		bx	lr
 426              	.L31:
 427 001e 00BF     		.align	2
 428              	.L30:
 429 0020 00E100E0 		.word	-536813312
 430              		.cfi_endproc
 431              	.LFE9:
 432              		.size	QuadDec_Shoulder_isr_GetState, .-QuadDec_Shoulder_isr_GetState
 433              		.section	.text.QuadDec_Shoulder_isr_Disable,"ax",%progbits
 434              		.align	2
 435              		.global	QuadDec_Shoulder_isr_Disable
 436              		.thumb
 437              		.thumb_func
 438              		.type	QuadDec_Shoulder_isr_Disable, %function
 439              	QuadDec_Shoulder_isr_Disable:
 440              	.LFB10:
 333:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 334:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 335:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 336:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_Disable
 337:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 338:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 339:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 340:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Disables the Interrupt in the interrupt controller.
 341:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 342:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 343:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 344:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 345:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 346:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 347:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 348:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 349:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_Disable(void)
 350:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 441              		.loc 1 350 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 15


 449 0002 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 351:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     /* Disable the general interrupt. */
 352:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     *QuadDec_Shoulder_isr_INTC_CLR_EN = QuadDec_Shoulder_isr__INTC_MASK;
 451              		.loc 1 352 0
 452 0004 034B     		ldr	r3, .L33
 453 0006 0422     		movs	r2, #4
 454 0008 1A60     		str	r2, [r3]
 353:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 455              		.loc 1 353 0
 456 000a 00BF     		nop
 457 000c BD46     		mov	sp, r7
 458              		.cfi_def_cfa_register 13
 459              		@ sp needed
 460 000e 80BC     		pop	{r7}
 461              		.cfi_restore 7
 462              		.cfi_def_cfa_offset 0
 463 0010 7047     		bx	lr
 464              	.L34:
 465 0012 00BF     		.align	2
 466              	.L33:
 467 0014 80E100E0 		.word	-536813184
 468              		.cfi_endproc
 469              	.LFE10:
 470              		.size	QuadDec_Shoulder_isr_Disable, .-QuadDec_Shoulder_isr_Disable
 471              		.section	.text.QuadDec_Shoulder_isr_SetPending,"ax",%progbits
 472              		.align	2
 473              		.global	QuadDec_Shoulder_isr_SetPending
 474              		.thumb
 475              		.thumb_func
 476              		.type	QuadDec_Shoulder_isr_SetPending, %function
 477              	QuadDec_Shoulder_isr_SetPending:
 478              	.LFB11:
 354:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 355:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 356:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 357:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_SetPending
 358:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 359:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 360:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 361:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Causes the Interrupt to enter the pending state, a software method of
 362:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   generating the interrupt.
 363:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 364:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 365:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 366:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 367:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 368:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 369:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 370:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Side Effects:
 371:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 372:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   entered (depending on the priority of this interrupt and other pending 
 373:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   interrupts).
 374:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 375:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 376:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_SetPending(void)
 377:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 16


 479              		.loc 1 377 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484 0000 80B4     		push	{r7}
 485              		.cfi_def_cfa_offset 4
 486              		.cfi_offset 7, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 378:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     *QuadDec_Shoulder_isr_INTC_SET_PD = QuadDec_Shoulder_isr__INTC_MASK;
 489              		.loc 1 378 0
 490 0004 034B     		ldr	r3, .L36
 491 0006 0422     		movs	r2, #4
 492 0008 1A60     		str	r2, [r3]
 379:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 493              		.loc 1 379 0
 494 000a 00BF     		nop
 495 000c BD46     		mov	sp, r7
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 000e 80BC     		pop	{r7}
 499              		.cfi_restore 7
 500              		.cfi_def_cfa_offset 0
 501 0010 7047     		bx	lr
 502              	.L37:
 503 0012 00BF     		.align	2
 504              	.L36:
 505 0014 00E200E0 		.word	-536813056
 506              		.cfi_endproc
 507              	.LFE11:
 508              		.size	QuadDec_Shoulder_isr_SetPending, .-QuadDec_Shoulder_isr_SetPending
 509              		.section	.text.QuadDec_Shoulder_isr_ClearPending,"ax",%progbits
 510              		.align	2
 511              		.global	QuadDec_Shoulder_isr_ClearPending
 512              		.thumb
 513              		.thumb_func
 514              		.type	QuadDec_Shoulder_isr_ClearPending, %function
 515              	QuadDec_Shoulder_isr_ClearPending:
 516              	.LFB12:
 380:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 381:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** 
 382:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** /*******************************************************************************
 383:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Function Name: QuadDec_Shoulder_isr_ClearPending
 384:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** ********************************************************************************
 385:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 386:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Summary:
 387:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Clears a pending interrupt in the interrupt controller.
 388:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 389:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 390:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 391:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 392:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   pending state even though the interrupt itself is cleared using this API.
 393:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 394:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Parameters:
 395:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 396:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 17


 397:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** * Return:
 398:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *   None
 399:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *
 400:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** *******************************************************************************/
 401:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** void QuadDec_Shoulder_isr_ClearPending(void)
 402:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** {
 517              		.loc 1 402 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522 0000 80B4     		push	{r7}
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 7, -4
 525 0002 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c ****     *QuadDec_Shoulder_isr_INTC_CLR_PD = QuadDec_Shoulder_isr__INTC_MASK;
 527              		.loc 1 403 0
 528 0004 034B     		ldr	r3, .L39
 529 0006 0422     		movs	r2, #4
 530 0008 1A60     		str	r2, [r3]
 404:Generated_Source\PSoC5/QuadDec_Shoulder_isr.c **** }
 531              		.loc 1 404 0
 532 000a 00BF     		nop
 533 000c BD46     		mov	sp, r7
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 000e 80BC     		pop	{r7}
 537              		.cfi_restore 7
 538              		.cfi_def_cfa_offset 0
 539 0010 7047     		bx	lr
 540              	.L40:
 541 0012 00BF     		.align	2
 542              	.L39:
 543 0014 80E200E0 		.word	-536812928
 544              		.cfi_endproc
 545              	.LFE12:
 546              		.size	QuadDec_Shoulder_isr_ClearPending, .-QuadDec_Shoulder_isr_ClearPending
 547              		.text
 548              	.Letext0:
 549              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 550              		.section	.debug_info,"",%progbits
 551              	.Ldebug_info0:
 552 0000 36020000 		.4byte	0x236
 553 0004 0400     		.2byte	0x4
 554 0006 00000000 		.4byte	.Ldebug_abbrev0
 555 000a 04       		.byte	0x4
 556 000b 01       		.uleb128 0x1
 557 000c 53000000 		.4byte	.LASF33
 558 0010 0C       		.byte	0xc
 559 0011 25000000 		.4byte	.LASF34
 560 0015 7F020000 		.4byte	.LASF35
 561 0019 00000000 		.4byte	.Ldebug_ranges0+0
 562 001d 00000000 		.4byte	0
 563 0021 00000000 		.4byte	.Ldebug_line0
 564 0025 02       		.uleb128 0x2
 565 0026 04       		.byte	0x4
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 18


 566 0027 05       		.byte	0x5
 567 0028 696E7400 		.ascii	"int\000"
 568 002c 03       		.uleb128 0x3
 569 002d 04       		.byte	0x4
 570 002e 07       		.byte	0x7
 571 002f 2B020000 		.4byte	.LASF0
 572 0033 03       		.uleb128 0x3
 573 0034 08       		.byte	0x8
 574 0035 05       		.byte	0x5
 575 0036 B4020000 		.4byte	.LASF1
 576 003a 03       		.uleb128 0x3
 577 003b 08       		.byte	0x8
 578 003c 04       		.byte	0x4
 579 003d 22030000 		.4byte	.LASF2
 580 0041 03       		.uleb128 0x3
 581 0042 01       		.byte	0x1
 582 0043 06       		.byte	0x6
 583 0044 2E030000 		.4byte	.LASF3
 584 0048 03       		.uleb128 0x3
 585 0049 01       		.byte	0x1
 586 004a 08       		.byte	0x8
 587 004b D4010000 		.4byte	.LASF4
 588 004f 03       		.uleb128 0x3
 589 0050 02       		.byte	0x2
 590 0051 05       		.byte	0x5
 591 0052 D6020000 		.4byte	.LASF5
 592 0056 03       		.uleb128 0x3
 593 0057 02       		.byte	0x2
 594 0058 07       		.byte	0x7
 595 0059 02010000 		.4byte	.LASF6
 596 005d 03       		.uleb128 0x3
 597 005e 04       		.byte	0x4
 598 005f 05       		.byte	0x5
 599 0060 FA020000 		.4byte	.LASF7
 600 0064 03       		.uleb128 0x3
 601 0065 04       		.byte	0x4
 602 0066 07       		.byte	0x7
 603 0067 75010000 		.4byte	.LASF8
 604 006b 03       		.uleb128 0x3
 605 006c 08       		.byte	0x8
 606 006d 07       		.byte	0x7
 607 006e 40020000 		.4byte	.LASF9
 608 0072 03       		.uleb128 0x3
 609 0073 04       		.byte	0x4
 610 0074 07       		.byte	0x7
 611 0075 AB020000 		.4byte	.LASF10
 612 0079 03       		.uleb128 0x3
 613 007a 01       		.byte	0x1
 614 007b 08       		.byte	0x8
 615 007c C2020000 		.4byte	.LASF11
 616 0080 04       		.uleb128 0x4
 617 0081 04       		.byte	0x4
 618 0082 86000000 		.4byte	0x86
 619 0086 05       		.uleb128 0x5
 620 0087 06       		.uleb128 0x6
 621 0088 87010000 		.4byte	.LASF12
 622 008c 02       		.byte	0x2
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 19


 623 008d 9201     		.2byte	0x192
 624 008f 48000000 		.4byte	0x48
 625 0093 06       		.uleb128 0x6
 626 0094 24020000 		.4byte	.LASF13
 627 0098 02       		.byte	0x2
 628 0099 9401     		.2byte	0x194
 629 009b 64000000 		.4byte	0x64
 630 009f 03       		.uleb128 0x3
 631 00a0 08       		.byte	0x8
 632 00a1 04       		.byte	0x4
 633 00a2 E2010000 		.4byte	.LASF14
 634 00a6 06       		.uleb128 0x6
 635 00a7 70010000 		.4byte	.LASF15
 636 00ab 02       		.byte	0x2
 637 00ac 3C02     		.2byte	0x23c
 638 00ae B2000000 		.4byte	0xb2
 639 00b2 07       		.uleb128 0x7
 640 00b3 87000000 		.4byte	0x87
 641 00b7 06       		.uleb128 0x6
 642 00b8 00000000 		.4byte	.LASF16
 643 00bc 02       		.byte	0x2
 644 00bd 3E02     		.2byte	0x23e
 645 00bf C3000000 		.4byte	0xc3
 646 00c3 07       		.uleb128 0x7
 647 00c4 93000000 		.4byte	0x93
 648 00c8 06       		.uleb128 0x6
 649 00c9 57020000 		.4byte	.LASF17
 650 00cd 02       		.byte	0x2
 651 00ce 4E02     		.2byte	0x24e
 652 00d0 80000000 		.4byte	0x80
 653 00d4 08       		.uleb128 0x8
 654 00d5 64020000 		.4byte	.LASF18
 655 00d9 01       		.byte	0x1
 656 00da 3D       		.byte	0x3d
 657 00db 00000000 		.4byte	.LFB0
 658 00df 20000000 		.4byte	.LFE0-.LFB0
 659 00e3 01       		.uleb128 0x1
 660 00e4 9C       		.byte	0x9c
 661 00e5 09       		.uleb128 0x9
 662 00e6 35010000 		.4byte	.LASF21
 663 00ea 01       		.byte	0x1
 664 00eb 68       		.byte	0x68
 665 00ec 00000000 		.4byte	.LFB1
 666 00f0 24000000 		.4byte	.LFE1-.LFB1
 667 00f4 01       		.uleb128 0x1
 668 00f5 9C       		.byte	0x9c
 669 00f6 09010000 		.4byte	0x109
 670 00fa 0A       		.uleb128 0xa
 671 00fb 38020000 		.4byte	.LASF23
 672 00ff 01       		.byte	0x1
 673 0100 68       		.byte	0x68
 674 0101 C8000000 		.4byte	0xc8
 675 0105 02       		.uleb128 0x2
 676 0106 91       		.byte	0x91
 677 0107 74       		.sleb128 -12
 678 0108 00       		.byte	0
 679 0109 08       		.uleb128 0x8
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 20


 680 010a E0020000 		.4byte	.LASF19
 681 010e 01       		.byte	0x1
 682 010f 86       		.byte	0x86
 683 0110 00000000 		.4byte	.LFB2
 684 0114 18000000 		.4byte	.LFE2-.LFB2
 685 0118 01       		.uleb128 0x1
 686 0119 9C       		.byte	0x9c
 687 011a 0B       		.uleb128 0xb
 688 011b 06000000 		.4byte	.LASF20
 689 011f 01       		.byte	0x1
 690 0120 A0       		.byte	0xa0
 691 0121 00000000 		.4byte	.LFB3
 692 0125 0C000000 		.4byte	.LFE3-.LFB3
 693 0129 01       		.uleb128 0x1
 694 012a 9C       		.byte	0x9c
 695 012b 0C       		.uleb128 0xc
 696 012c 05020000 		.4byte	.LASF22
 697 0130 01       		.byte	0x1
 698 0131 C8       		.byte	0xc8
 699 0132 00000000 		.4byte	.LFB4
 700 0136 24000000 		.4byte	.LFE4-.LFB4
 701 013a 01       		.uleb128 0x1
 702 013b 9C       		.byte	0x9c
 703 013c 5D010000 		.4byte	0x15d
 704 0140 0A       		.uleb128 0xa
 705 0141 38020000 		.4byte	.LASF23
 706 0145 01       		.byte	0x1
 707 0146 C8       		.byte	0xc8
 708 0147 C8000000 		.4byte	0xc8
 709 014b 02       		.uleb128 0x2
 710 014c 91       		.byte	0x91
 711 014d 6C       		.sleb128 -20
 712 014e 0D       		.uleb128 0xd
 713 014f C7020000 		.4byte	.LASF24
 714 0153 01       		.byte	0x1
 715 0154 CA       		.byte	0xca
 716 0155 5D010000 		.4byte	0x15d
 717 0159 02       		.uleb128 0x2
 718 015a 91       		.byte	0x91
 719 015b 74       		.sleb128 -12
 720 015c 00       		.byte	0
 721 015d 04       		.uleb128 0x4
 722 015e 04       		.byte	0x4
 723 015f C8000000 		.4byte	0xc8
 724 0163 0E       		.uleb128 0xe
 725 0164 03030000 		.4byte	.LASF27
 726 0168 01       		.byte	0x1
 727 0169 E0       		.byte	0xe0
 728 016a C8000000 		.4byte	0xc8
 729 016e 00000000 		.4byte	.LFB5
 730 0172 20000000 		.4byte	.LFE5-.LFB5
 731 0176 01       		.uleb128 0x1
 732 0177 9C       		.byte	0x9c
 733 0178 8B010000 		.4byte	0x18b
 734 017c 0D       		.uleb128 0xd
 735 017d C7020000 		.4byte	.LASF24
 736 0181 01       		.byte	0x1
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 21


 737 0182 E2       		.byte	0xe2
 738 0183 5D010000 		.4byte	0x15d
 739 0187 02       		.uleb128 0x2
 740 0188 91       		.byte	0x91
 741 0189 74       		.sleb128 -12
 742 018a 00       		.byte	0
 743 018b 0F       		.uleb128 0xf
 744 018c 8D010000 		.4byte	.LASF25
 745 0190 01       		.byte	0x1
 746 0191 0201     		.2byte	0x102
 747 0193 00000000 		.4byte	.LFB6
 748 0197 24000000 		.4byte	.LFE6-.LFB6
 749 019b 01       		.uleb128 0x1
 750 019c 9C       		.byte	0x9c
 751 019d B1010000 		.4byte	0x1b1
 752 01a1 10       		.uleb128 0x10
 753 01a2 AE010000 		.4byte	.LASF26
 754 01a6 01       		.byte	0x1
 755 01a7 0201     		.2byte	0x102
 756 01a9 87000000 		.4byte	0x87
 757 01ad 02       		.uleb128 0x2
 758 01ae 91       		.byte	0x91
 759 01af 77       		.sleb128 -9
 760 01b0 00       		.byte	0
 761 01b1 11       		.uleb128 0x11
 762 01b2 E1000000 		.4byte	.LASF28
 763 01b6 01       		.byte	0x1
 764 01b7 1801     		.2byte	0x118
 765 01b9 87000000 		.4byte	0x87
 766 01bd 00000000 		.4byte	.LFB7
 767 01c1 20000000 		.4byte	.LFE7-.LFB7
 768 01c5 01       		.uleb128 0x1
 769 01c6 9C       		.byte	0x9c
 770 01c7 DB010000 		.4byte	0x1db
 771 01cb 12       		.uleb128 0x12
 772 01cc AE010000 		.4byte	.LASF26
 773 01d0 01       		.byte	0x1
 774 01d1 1A01     		.2byte	0x11a
 775 01d3 87000000 		.4byte	0x87
 776 01d7 02       		.uleb128 0x2
 777 01d8 91       		.byte	0x91
 778 01d9 77       		.sleb128 -9
 779 01da 00       		.byte	0
 780 01db 13       		.uleb128 0x13
 781 01dc E9010000 		.4byte	.LASF29
 782 01e0 01       		.byte	0x1
 783 01e1 3301     		.2byte	0x133
 784 01e3 00000000 		.4byte	.LFB8
 785 01e7 18000000 		.4byte	.LFE8-.LFB8
 786 01eb 01       		.uleb128 0x1
 787 01ec 9C       		.byte	0x9c
 788 01ed 14       		.uleb128 0x14
 789 01ee 52010000 		.4byte	.LASF36
 790 01f2 01       		.byte	0x1
 791 01f3 4801     		.2byte	0x148
 792 01f5 87000000 		.4byte	0x87
 793 01f9 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 22


 794 01fd 24000000 		.4byte	.LFE9-.LFB9
 795 0201 01       		.uleb128 0x1
 796 0202 9C       		.byte	0x9c
 797 0203 13       		.uleb128 0x13
 798 0204 B7010000 		.4byte	.LASF30
 799 0208 01       		.byte	0x1
 800 0209 5D01     		.2byte	0x15d
 801 020b 00000000 		.4byte	.LFB10
 802 020f 18000000 		.4byte	.LFE10-.LFB10
 803 0213 01       		.uleb128 0x1
 804 0214 9C       		.byte	0x9c
 805 0215 13       		.uleb128 0x13
 806 0216 15010000 		.4byte	.LASF31
 807 021a 01       		.byte	0x1
 808 021b 7801     		.2byte	0x178
 809 021d 00000000 		.4byte	.LFB11
 810 0221 18000000 		.4byte	.LFE11-.LFB11
 811 0225 01       		.uleb128 0x1
 812 0226 9C       		.byte	0x9c
 813 0227 13       		.uleb128 0x13
 814 0228 3A030000 		.4byte	.LASF32
 815 022c 01       		.byte	0x1
 816 022d 9101     		.2byte	0x191
 817 022f 00000000 		.4byte	.LFB12
 818 0233 18000000 		.4byte	.LFE12-.LFB12
 819 0237 01       		.uleb128 0x1
 820 0238 9C       		.byte	0x9c
 821 0239 00       		.byte	0
 822              		.section	.debug_abbrev,"",%progbits
 823              	.Ldebug_abbrev0:
 824 0000 01       		.uleb128 0x1
 825 0001 11       		.uleb128 0x11
 826 0002 01       		.byte	0x1
 827 0003 25       		.uleb128 0x25
 828 0004 0E       		.uleb128 0xe
 829 0005 13       		.uleb128 0x13
 830 0006 0B       		.uleb128 0xb
 831 0007 03       		.uleb128 0x3
 832 0008 0E       		.uleb128 0xe
 833 0009 1B       		.uleb128 0x1b
 834 000a 0E       		.uleb128 0xe
 835 000b 55       		.uleb128 0x55
 836 000c 17       		.uleb128 0x17
 837 000d 11       		.uleb128 0x11
 838 000e 01       		.uleb128 0x1
 839 000f 10       		.uleb128 0x10
 840 0010 17       		.uleb128 0x17
 841 0011 00       		.byte	0
 842 0012 00       		.byte	0
 843 0013 02       		.uleb128 0x2
 844 0014 24       		.uleb128 0x24
 845 0015 00       		.byte	0
 846 0016 0B       		.uleb128 0xb
 847 0017 0B       		.uleb128 0xb
 848 0018 3E       		.uleb128 0x3e
 849 0019 0B       		.uleb128 0xb
 850 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 23


 851 001b 08       		.uleb128 0x8
 852 001c 00       		.byte	0
 853 001d 00       		.byte	0
 854 001e 03       		.uleb128 0x3
 855 001f 24       		.uleb128 0x24
 856 0020 00       		.byte	0
 857 0021 0B       		.uleb128 0xb
 858 0022 0B       		.uleb128 0xb
 859 0023 3E       		.uleb128 0x3e
 860 0024 0B       		.uleb128 0xb
 861 0025 03       		.uleb128 0x3
 862 0026 0E       		.uleb128 0xe
 863 0027 00       		.byte	0
 864 0028 00       		.byte	0
 865 0029 04       		.uleb128 0x4
 866 002a 0F       		.uleb128 0xf
 867 002b 00       		.byte	0
 868 002c 0B       		.uleb128 0xb
 869 002d 0B       		.uleb128 0xb
 870 002e 49       		.uleb128 0x49
 871 002f 13       		.uleb128 0x13
 872 0030 00       		.byte	0
 873 0031 00       		.byte	0
 874 0032 05       		.uleb128 0x5
 875 0033 15       		.uleb128 0x15
 876 0034 00       		.byte	0
 877 0035 27       		.uleb128 0x27
 878 0036 19       		.uleb128 0x19
 879 0037 00       		.byte	0
 880 0038 00       		.byte	0
 881 0039 06       		.uleb128 0x6
 882 003a 16       		.uleb128 0x16
 883 003b 00       		.byte	0
 884 003c 03       		.uleb128 0x3
 885 003d 0E       		.uleb128 0xe
 886 003e 3A       		.uleb128 0x3a
 887 003f 0B       		.uleb128 0xb
 888 0040 3B       		.uleb128 0x3b
 889 0041 05       		.uleb128 0x5
 890 0042 49       		.uleb128 0x49
 891 0043 13       		.uleb128 0x13
 892 0044 00       		.byte	0
 893 0045 00       		.byte	0
 894 0046 07       		.uleb128 0x7
 895 0047 35       		.uleb128 0x35
 896 0048 00       		.byte	0
 897 0049 49       		.uleb128 0x49
 898 004a 13       		.uleb128 0x13
 899 004b 00       		.byte	0
 900 004c 00       		.byte	0
 901 004d 08       		.uleb128 0x8
 902 004e 2E       		.uleb128 0x2e
 903 004f 00       		.byte	0
 904 0050 3F       		.uleb128 0x3f
 905 0051 19       		.uleb128 0x19
 906 0052 03       		.uleb128 0x3
 907 0053 0E       		.uleb128 0xe
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 24


 908 0054 3A       		.uleb128 0x3a
 909 0055 0B       		.uleb128 0xb
 910 0056 3B       		.uleb128 0x3b
 911 0057 0B       		.uleb128 0xb
 912 0058 27       		.uleb128 0x27
 913 0059 19       		.uleb128 0x19
 914 005a 11       		.uleb128 0x11
 915 005b 01       		.uleb128 0x1
 916 005c 12       		.uleb128 0x12
 917 005d 06       		.uleb128 0x6
 918 005e 40       		.uleb128 0x40
 919 005f 18       		.uleb128 0x18
 920 0060 9642     		.uleb128 0x2116
 921 0062 19       		.uleb128 0x19
 922 0063 00       		.byte	0
 923 0064 00       		.byte	0
 924 0065 09       		.uleb128 0x9
 925 0066 2E       		.uleb128 0x2e
 926 0067 01       		.byte	0x1
 927 0068 3F       		.uleb128 0x3f
 928 0069 19       		.uleb128 0x19
 929 006a 03       		.uleb128 0x3
 930 006b 0E       		.uleb128 0xe
 931 006c 3A       		.uleb128 0x3a
 932 006d 0B       		.uleb128 0xb
 933 006e 3B       		.uleb128 0x3b
 934 006f 0B       		.uleb128 0xb
 935 0070 27       		.uleb128 0x27
 936 0071 19       		.uleb128 0x19
 937 0072 11       		.uleb128 0x11
 938 0073 01       		.uleb128 0x1
 939 0074 12       		.uleb128 0x12
 940 0075 06       		.uleb128 0x6
 941 0076 40       		.uleb128 0x40
 942 0077 18       		.uleb128 0x18
 943 0078 9642     		.uleb128 0x2116
 944 007a 19       		.uleb128 0x19
 945 007b 01       		.uleb128 0x1
 946 007c 13       		.uleb128 0x13
 947 007d 00       		.byte	0
 948 007e 00       		.byte	0
 949 007f 0A       		.uleb128 0xa
 950 0080 05       		.uleb128 0x5
 951 0081 00       		.byte	0
 952 0082 03       		.uleb128 0x3
 953 0083 0E       		.uleb128 0xe
 954 0084 3A       		.uleb128 0x3a
 955 0085 0B       		.uleb128 0xb
 956 0086 3B       		.uleb128 0x3b
 957 0087 0B       		.uleb128 0xb
 958 0088 49       		.uleb128 0x49
 959 0089 13       		.uleb128 0x13
 960 008a 02       		.uleb128 0x2
 961 008b 18       		.uleb128 0x18
 962 008c 00       		.byte	0
 963 008d 00       		.byte	0
 964 008e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 25


 965 008f 2E       		.uleb128 0x2e
 966 0090 00       		.byte	0
 967 0091 3F       		.uleb128 0x3f
 968 0092 19       		.uleb128 0x19
 969 0093 03       		.uleb128 0x3
 970 0094 0E       		.uleb128 0xe
 971 0095 3A       		.uleb128 0x3a
 972 0096 0B       		.uleb128 0xb
 973 0097 3B       		.uleb128 0x3b
 974 0098 0B       		.uleb128 0xb
 975 0099 27       		.uleb128 0x27
 976 009a 19       		.uleb128 0x19
 977 009b 11       		.uleb128 0x11
 978 009c 01       		.uleb128 0x1
 979 009d 12       		.uleb128 0x12
 980 009e 06       		.uleb128 0x6
 981 009f 40       		.uleb128 0x40
 982 00a0 18       		.uleb128 0x18
 983 00a1 9742     		.uleb128 0x2117
 984 00a3 19       		.uleb128 0x19
 985 00a4 00       		.byte	0
 986 00a5 00       		.byte	0
 987 00a6 0C       		.uleb128 0xc
 988 00a7 2E       		.uleb128 0x2e
 989 00a8 01       		.byte	0x1
 990 00a9 3F       		.uleb128 0x3f
 991 00aa 19       		.uleb128 0x19
 992 00ab 03       		.uleb128 0x3
 993 00ac 0E       		.uleb128 0xe
 994 00ad 3A       		.uleb128 0x3a
 995 00ae 0B       		.uleb128 0xb
 996 00af 3B       		.uleb128 0x3b
 997 00b0 0B       		.uleb128 0xb
 998 00b1 27       		.uleb128 0x27
 999 00b2 19       		.uleb128 0x19
 1000 00b3 11       		.uleb128 0x11
 1001 00b4 01       		.uleb128 0x1
 1002 00b5 12       		.uleb128 0x12
 1003 00b6 06       		.uleb128 0x6
 1004 00b7 40       		.uleb128 0x40
 1005 00b8 18       		.uleb128 0x18
 1006 00b9 9742     		.uleb128 0x2117
 1007 00bb 19       		.uleb128 0x19
 1008 00bc 01       		.uleb128 0x1
 1009 00bd 13       		.uleb128 0x13
 1010 00be 00       		.byte	0
 1011 00bf 00       		.byte	0
 1012 00c0 0D       		.uleb128 0xd
 1013 00c1 34       		.uleb128 0x34
 1014 00c2 00       		.byte	0
 1015 00c3 03       		.uleb128 0x3
 1016 00c4 0E       		.uleb128 0xe
 1017 00c5 3A       		.uleb128 0x3a
 1018 00c6 0B       		.uleb128 0xb
 1019 00c7 3B       		.uleb128 0x3b
 1020 00c8 0B       		.uleb128 0xb
 1021 00c9 49       		.uleb128 0x49
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 26


 1022 00ca 13       		.uleb128 0x13
 1023 00cb 02       		.uleb128 0x2
 1024 00cc 18       		.uleb128 0x18
 1025 00cd 00       		.byte	0
 1026 00ce 00       		.byte	0
 1027 00cf 0E       		.uleb128 0xe
 1028 00d0 2E       		.uleb128 0x2e
 1029 00d1 01       		.byte	0x1
 1030 00d2 3F       		.uleb128 0x3f
 1031 00d3 19       		.uleb128 0x19
 1032 00d4 03       		.uleb128 0x3
 1033 00d5 0E       		.uleb128 0xe
 1034 00d6 3A       		.uleb128 0x3a
 1035 00d7 0B       		.uleb128 0xb
 1036 00d8 3B       		.uleb128 0x3b
 1037 00d9 0B       		.uleb128 0xb
 1038 00da 27       		.uleb128 0x27
 1039 00db 19       		.uleb128 0x19
 1040 00dc 49       		.uleb128 0x49
 1041 00dd 13       		.uleb128 0x13
 1042 00de 11       		.uleb128 0x11
 1043 00df 01       		.uleb128 0x1
 1044 00e0 12       		.uleb128 0x12
 1045 00e1 06       		.uleb128 0x6
 1046 00e2 40       		.uleb128 0x40
 1047 00e3 18       		.uleb128 0x18
 1048 00e4 9742     		.uleb128 0x2117
 1049 00e6 19       		.uleb128 0x19
 1050 00e7 01       		.uleb128 0x1
 1051 00e8 13       		.uleb128 0x13
 1052 00e9 00       		.byte	0
 1053 00ea 00       		.byte	0
 1054 00eb 0F       		.uleb128 0xf
 1055 00ec 2E       		.uleb128 0x2e
 1056 00ed 01       		.byte	0x1
 1057 00ee 3F       		.uleb128 0x3f
 1058 00ef 19       		.uleb128 0x19
 1059 00f0 03       		.uleb128 0x3
 1060 00f1 0E       		.uleb128 0xe
 1061 00f2 3A       		.uleb128 0x3a
 1062 00f3 0B       		.uleb128 0xb
 1063 00f4 3B       		.uleb128 0x3b
 1064 00f5 05       		.uleb128 0x5
 1065 00f6 27       		.uleb128 0x27
 1066 00f7 19       		.uleb128 0x19
 1067 00f8 11       		.uleb128 0x11
 1068 00f9 01       		.uleb128 0x1
 1069 00fa 12       		.uleb128 0x12
 1070 00fb 06       		.uleb128 0x6
 1071 00fc 40       		.uleb128 0x40
 1072 00fd 18       		.uleb128 0x18
 1073 00fe 9742     		.uleb128 0x2117
 1074 0100 19       		.uleb128 0x19
 1075 0101 01       		.uleb128 0x1
 1076 0102 13       		.uleb128 0x13
 1077 0103 00       		.byte	0
 1078 0104 00       		.byte	0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 27


 1079 0105 10       		.uleb128 0x10
 1080 0106 05       		.uleb128 0x5
 1081 0107 00       		.byte	0
 1082 0108 03       		.uleb128 0x3
 1083 0109 0E       		.uleb128 0xe
 1084 010a 3A       		.uleb128 0x3a
 1085 010b 0B       		.uleb128 0xb
 1086 010c 3B       		.uleb128 0x3b
 1087 010d 05       		.uleb128 0x5
 1088 010e 49       		.uleb128 0x49
 1089 010f 13       		.uleb128 0x13
 1090 0110 02       		.uleb128 0x2
 1091 0111 18       		.uleb128 0x18
 1092 0112 00       		.byte	0
 1093 0113 00       		.byte	0
 1094 0114 11       		.uleb128 0x11
 1095 0115 2E       		.uleb128 0x2e
 1096 0116 01       		.byte	0x1
 1097 0117 3F       		.uleb128 0x3f
 1098 0118 19       		.uleb128 0x19
 1099 0119 03       		.uleb128 0x3
 1100 011a 0E       		.uleb128 0xe
 1101 011b 3A       		.uleb128 0x3a
 1102 011c 0B       		.uleb128 0xb
 1103 011d 3B       		.uleb128 0x3b
 1104 011e 05       		.uleb128 0x5
 1105 011f 27       		.uleb128 0x27
 1106 0120 19       		.uleb128 0x19
 1107 0121 49       		.uleb128 0x49
 1108 0122 13       		.uleb128 0x13
 1109 0123 11       		.uleb128 0x11
 1110 0124 01       		.uleb128 0x1
 1111 0125 12       		.uleb128 0x12
 1112 0126 06       		.uleb128 0x6
 1113 0127 40       		.uleb128 0x40
 1114 0128 18       		.uleb128 0x18
 1115 0129 9742     		.uleb128 0x2117
 1116 012b 19       		.uleb128 0x19
 1117 012c 01       		.uleb128 0x1
 1118 012d 13       		.uleb128 0x13
 1119 012e 00       		.byte	0
 1120 012f 00       		.byte	0
 1121 0130 12       		.uleb128 0x12
 1122 0131 34       		.uleb128 0x34
 1123 0132 00       		.byte	0
 1124 0133 03       		.uleb128 0x3
 1125 0134 0E       		.uleb128 0xe
 1126 0135 3A       		.uleb128 0x3a
 1127 0136 0B       		.uleb128 0xb
 1128 0137 3B       		.uleb128 0x3b
 1129 0138 05       		.uleb128 0x5
 1130 0139 49       		.uleb128 0x49
 1131 013a 13       		.uleb128 0x13
 1132 013b 02       		.uleb128 0x2
 1133 013c 18       		.uleb128 0x18
 1134 013d 00       		.byte	0
 1135 013e 00       		.byte	0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 28


 1136 013f 13       		.uleb128 0x13
 1137 0140 2E       		.uleb128 0x2e
 1138 0141 00       		.byte	0
 1139 0142 3F       		.uleb128 0x3f
 1140 0143 19       		.uleb128 0x19
 1141 0144 03       		.uleb128 0x3
 1142 0145 0E       		.uleb128 0xe
 1143 0146 3A       		.uleb128 0x3a
 1144 0147 0B       		.uleb128 0xb
 1145 0148 3B       		.uleb128 0x3b
 1146 0149 05       		.uleb128 0x5
 1147 014a 27       		.uleb128 0x27
 1148 014b 19       		.uleb128 0x19
 1149 014c 11       		.uleb128 0x11
 1150 014d 01       		.uleb128 0x1
 1151 014e 12       		.uleb128 0x12
 1152 014f 06       		.uleb128 0x6
 1153 0150 40       		.uleb128 0x40
 1154 0151 18       		.uleb128 0x18
 1155 0152 9742     		.uleb128 0x2117
 1156 0154 19       		.uleb128 0x19
 1157 0155 00       		.byte	0
 1158 0156 00       		.byte	0
 1159 0157 14       		.uleb128 0x14
 1160 0158 2E       		.uleb128 0x2e
 1161 0159 00       		.byte	0
 1162 015a 3F       		.uleb128 0x3f
 1163 015b 19       		.uleb128 0x19
 1164 015c 03       		.uleb128 0x3
 1165 015d 0E       		.uleb128 0xe
 1166 015e 3A       		.uleb128 0x3a
 1167 015f 0B       		.uleb128 0xb
 1168 0160 3B       		.uleb128 0x3b
 1169 0161 05       		.uleb128 0x5
 1170 0162 27       		.uleb128 0x27
 1171 0163 19       		.uleb128 0x19
 1172 0164 49       		.uleb128 0x49
 1173 0165 13       		.uleb128 0x13
 1174 0166 11       		.uleb128 0x11
 1175 0167 01       		.uleb128 0x1
 1176 0168 12       		.uleb128 0x12
 1177 0169 06       		.uleb128 0x6
 1178 016a 40       		.uleb128 0x40
 1179 016b 18       		.uleb128 0x18
 1180 016c 9742     		.uleb128 0x2117
 1181 016e 19       		.uleb128 0x19
 1182 016f 00       		.byte	0
 1183 0170 00       		.byte	0
 1184 0171 00       		.byte	0
 1185              		.section	.debug_aranges,"",%progbits
 1186 0000 7C000000 		.4byte	0x7c
 1187 0004 0200     		.2byte	0x2
 1188 0006 00000000 		.4byte	.Ldebug_info0
 1189 000a 04       		.byte	0x4
 1190 000b 00       		.byte	0
 1191 000c 0000     		.2byte	0
 1192 000e 0000     		.2byte	0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 29


 1193 0010 00000000 		.4byte	.LFB0
 1194 0014 20000000 		.4byte	.LFE0-.LFB0
 1195 0018 00000000 		.4byte	.LFB1
 1196 001c 24000000 		.4byte	.LFE1-.LFB1
 1197 0020 00000000 		.4byte	.LFB2
 1198 0024 18000000 		.4byte	.LFE2-.LFB2
 1199 0028 00000000 		.4byte	.LFB3
 1200 002c 0C000000 		.4byte	.LFE3-.LFB3
 1201 0030 00000000 		.4byte	.LFB4
 1202 0034 24000000 		.4byte	.LFE4-.LFB4
 1203 0038 00000000 		.4byte	.LFB5
 1204 003c 20000000 		.4byte	.LFE5-.LFB5
 1205 0040 00000000 		.4byte	.LFB6
 1206 0044 24000000 		.4byte	.LFE6-.LFB6
 1207 0048 00000000 		.4byte	.LFB7
 1208 004c 20000000 		.4byte	.LFE7-.LFB7
 1209 0050 00000000 		.4byte	.LFB8
 1210 0054 18000000 		.4byte	.LFE8-.LFB8
 1211 0058 00000000 		.4byte	.LFB9
 1212 005c 24000000 		.4byte	.LFE9-.LFB9
 1213 0060 00000000 		.4byte	.LFB10
 1214 0064 18000000 		.4byte	.LFE10-.LFB10
 1215 0068 00000000 		.4byte	.LFB11
 1216 006c 18000000 		.4byte	.LFE11-.LFB11
 1217 0070 00000000 		.4byte	.LFB12
 1218 0074 18000000 		.4byte	.LFE12-.LFB12
 1219 0078 00000000 		.4byte	0
 1220 007c 00000000 		.4byte	0
 1221              		.section	.debug_ranges,"",%progbits
 1222              	.Ldebug_ranges0:
 1223 0000 00000000 		.4byte	.LFB0
 1224 0004 20000000 		.4byte	.LFE0
 1225 0008 00000000 		.4byte	.LFB1
 1226 000c 24000000 		.4byte	.LFE1
 1227 0010 00000000 		.4byte	.LFB2
 1228 0014 18000000 		.4byte	.LFE2
 1229 0018 00000000 		.4byte	.LFB3
 1230 001c 0C000000 		.4byte	.LFE3
 1231 0020 00000000 		.4byte	.LFB4
 1232 0024 24000000 		.4byte	.LFE4
 1233 0028 00000000 		.4byte	.LFB5
 1234 002c 20000000 		.4byte	.LFE5
 1235 0030 00000000 		.4byte	.LFB6
 1236 0034 24000000 		.4byte	.LFE6
 1237 0038 00000000 		.4byte	.LFB7
 1238 003c 20000000 		.4byte	.LFE7
 1239 0040 00000000 		.4byte	.LFB8
 1240 0044 18000000 		.4byte	.LFE8
 1241 0048 00000000 		.4byte	.LFB9
 1242 004c 24000000 		.4byte	.LFE9
 1243 0050 00000000 		.4byte	.LFB10
 1244 0054 18000000 		.4byte	.LFE10
 1245 0058 00000000 		.4byte	.LFB11
 1246 005c 18000000 		.4byte	.LFE11
 1247 0060 00000000 		.4byte	.LFB12
 1248 0064 18000000 		.4byte	.LFE12
 1249 0068 00000000 		.4byte	0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 30


 1250 006c 00000000 		.4byte	0
 1251              		.section	.debug_line,"",%progbits
 1252              	.Ldebug_line0:
 1253 0000 5B010000 		.section	.debug_str,"MS",%progbits,1
 1253      02005100 
 1253      00000201 
 1253      FB0E0D00 
 1253      01010101 
 1254              	.LASF16:
 1255 0000 72656733 		.ascii	"reg32\000"
 1255      3200
 1256              	.LASF20:
 1257 0006 51756164 		.ascii	"QuadDec_Shoulder_isr_Interrupt\000"
 1257      4465635F 
 1257      53686F75 
 1257      6C646572 
 1257      5F697372 
 1258              	.LASF34:
 1259 0025 47656E65 		.ascii	"Generated_Source\\PSoC5\\QuadDec_Shoulder_isr.c\000"
 1259      72617465 
 1259      645F536F 
 1259      75726365 
 1259      5C50536F 
 1260              	.LASF33:
 1261 0053 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1261      43313120 
 1261      352E342E 
 1261      31203230 
 1261      31363036 
 1262 0086 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1262      20726576 
 1262      6973696F 
 1262      6E203233 
 1262      37373135 
 1263 00b9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1263      66756E63 
 1263      74696F6E 
 1263      2D736563 
 1263      74696F6E 
 1264              	.LASF28:
 1265 00e1 51756164 		.ascii	"QuadDec_Shoulder_isr_GetPriority\000"
 1265      4465635F 
 1265      53686F75 
 1265      6C646572 
 1265      5F697372 
 1266              	.LASF6:
 1267 0102 73686F72 		.ascii	"short unsigned int\000"
 1267      7420756E 
 1267      7369676E 
 1267      65642069 
 1267      6E7400
 1268              	.LASF31:
 1269 0115 51756164 		.ascii	"QuadDec_Shoulder_isr_SetPending\000"
 1269      4465635F 
 1269      53686F75 
 1269      6C646572 
 1269      5F697372 
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 31


 1270              	.LASF21:
 1271 0135 51756164 		.ascii	"QuadDec_Shoulder_isr_StartEx\000"
 1271      4465635F 
 1271      53686F75 
 1271      6C646572 
 1271      5F697372 
 1272              	.LASF36:
 1273 0152 51756164 		.ascii	"QuadDec_Shoulder_isr_GetState\000"
 1273      4465635F 
 1273      53686F75 
 1273      6C646572 
 1273      5F697372 
 1274              	.LASF15:
 1275 0170 72656738 		.ascii	"reg8\000"
 1275      00
 1276              	.LASF8:
 1277 0175 6C6F6E67 		.ascii	"long unsigned int\000"
 1277      20756E73 
 1277      69676E65 
 1277      6420696E 
 1277      7400
 1278              	.LASF12:
 1279 0187 75696E74 		.ascii	"uint8\000"
 1279      3800
 1280              	.LASF25:
 1281 018d 51756164 		.ascii	"QuadDec_Shoulder_isr_SetPriority\000"
 1281      4465635F 
 1281      53686F75 
 1281      6C646572 
 1281      5F697372 
 1282              	.LASF26:
 1283 01ae 7072696F 		.ascii	"priority\000"
 1283      72697479 
 1283      00
 1284              	.LASF30:
 1285 01b7 51756164 		.ascii	"QuadDec_Shoulder_isr_Disable\000"
 1285      4465635F 
 1285      53686F75 
 1285      6C646572 
 1285      5F697372 
 1286              	.LASF4:
 1287 01d4 756E7369 		.ascii	"unsigned char\000"
 1287      676E6564 
 1287      20636861 
 1287      7200
 1288              	.LASF14:
 1289 01e2 646F7562 		.ascii	"double\000"
 1289      6C6500
 1290              	.LASF29:
 1291 01e9 51756164 		.ascii	"QuadDec_Shoulder_isr_Enable\000"
 1291      4465635F 
 1291      53686F75 
 1291      6C646572 
 1291      5F697372 
 1292              	.LASF22:
 1293 0205 51756164 		.ascii	"QuadDec_Shoulder_isr_SetVector\000"
 1293      4465635F 
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 32


 1293      53686F75 
 1293      6C646572 
 1293      5F697372 
 1294              	.LASF13:
 1295 0224 75696E74 		.ascii	"uint32\000"
 1295      333200
 1296              	.LASF0:
 1297 022b 756E7369 		.ascii	"unsigned int\000"
 1297      676E6564 
 1297      20696E74 
 1297      00
 1298              	.LASF23:
 1299 0238 61646472 		.ascii	"address\000"
 1299      65737300 
 1300              	.LASF9:
 1301 0240 6C6F6E67 		.ascii	"long long unsigned int\000"
 1301      206C6F6E 
 1301      6720756E 
 1301      7369676E 
 1301      65642069 
 1302              	.LASF17:
 1303 0257 63796973 		.ascii	"cyisraddress\000"
 1303      72616464 
 1303      72657373 
 1303      00
 1304              	.LASF18:
 1305 0264 51756164 		.ascii	"QuadDec_Shoulder_isr_Start\000"
 1305      4465635F 
 1305      53686F75 
 1305      6C646572 
 1305      5F697372 
 1306              	.LASF35:
 1307 027f 433A5C55 		.ascii	"C:\\Users\\Albert\\Documents\\6115_fp\\IWP.cydsn\000"
 1307      73657273 
 1307      5C416C62 
 1307      6572745C 
 1307      446F6375 
 1308              	.LASF10:
 1309 02ab 73697A65 		.ascii	"sizetype\000"
 1309      74797065 
 1309      00
 1310              	.LASF1:
 1311 02b4 6C6F6E67 		.ascii	"long long int\000"
 1311      206C6F6E 
 1311      6720696E 
 1311      7400
 1312              	.LASF11:
 1313 02c2 63686172 		.ascii	"char\000"
 1313      00
 1314              	.LASF24:
 1315 02c7 72616D56 		.ascii	"ramVectorTable\000"
 1315      6563746F 
 1315      72546162 
 1315      6C6500
 1316              	.LASF5:
 1317 02d6 73686F72 		.ascii	"short int\000"
 1317      7420696E 
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccPzNRNt.s 			page 33


 1317      7400
 1318              	.LASF19:
 1319 02e0 51756164 		.ascii	"QuadDec_Shoulder_isr_Stop\000"
 1319      4465635F 
 1319      53686F75 
 1319      6C646572 
 1319      5F697372 
 1320              	.LASF7:
 1321 02fa 6C6F6E67 		.ascii	"long int\000"
 1321      20696E74 
 1321      00
 1322              	.LASF27:
 1323 0303 51756164 		.ascii	"QuadDec_Shoulder_isr_GetVector\000"
 1323      4465635F 
 1323      53686F75 
 1323      6C646572 
 1323      5F697372 
 1324              	.LASF2:
 1325 0322 6C6F6E67 		.ascii	"long double\000"
 1325      20646F75 
 1325      626C6500 
 1326              	.LASF3:
 1327 032e 7369676E 		.ascii	"signed char\000"
 1327      65642063 
 1327      68617200 
 1328              	.LASF32:
 1329 033a 51756164 		.ascii	"QuadDec_Shoulder_isr_ClearPending\000"
 1329      4465635F 
 1329      53686F75 
 1329      6C646572 
 1329      5F697372 
 1330              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
