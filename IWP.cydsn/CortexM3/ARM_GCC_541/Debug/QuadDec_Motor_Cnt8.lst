ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"QuadDec_Motor_Cnt8.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	QuadDec_Motor_Cnt8_initVar
  20              		.bss
  21              		.type	QuadDec_Motor_Cnt8_initVar, %object
  22              		.size	QuadDec_Motor_Cnt8_initVar, 1
  23              	QuadDec_Motor_Cnt8_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.QuadDec_Motor_Cnt8_Init,"ax",%progbits
  26              		.align	2
  27              		.global	QuadDec_Motor_Cnt8_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	QuadDec_Motor_Cnt8_Init, %function
  31              	QuadDec_Motor_Cnt8_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\QuadDec_Motor_Cnt8.c"
   1:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * File Name: QuadDec_Motor_Cnt8.c  
   3:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Version 3.0
   4:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
   5:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  Description:
   6:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
   9:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   Note:
  10:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *     None
  11:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
  12:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
  13:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
  19:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #include "QuadDec_Motor_Cnt8.h"
  20:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
  21:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** uint8 QuadDec_Motor_Cnt8_initVar = 0u;
  22:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
  23:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
  24:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 2


  25:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_Init
  26:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
  27:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
  28:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *     Initialize to the schematic state
  29:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * 
  30:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
  31:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void  
  32:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
  33:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
  34:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
  35:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
  36:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
  37:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_Init(void) 
  38:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
  34              		.loc 1 38 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #if (!QuadDec_Motor_Cnt8_UsingFixedFunction && !QuadDec_Motor_Cnt8_ControlRegRemoved)
  40:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             uint8 ctrl;
  41:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #endif /* (!QuadDec_Motor_Cnt8_UsingFixedFunction && !QuadDec_Motor_Cnt8_ControlRegRemoved)
  42:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         
  43:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #if(!QuadDec_Motor_Cnt8_UsingFixedFunction) 
  44:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Interrupt State Backup for Critical Region*/
  45:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             uint8 QuadDec_Motor_Cnt8_interruptState;
  46:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #endif /* (!QuadDec_Motor_Cnt8_UsingFixedFunction) */
  47:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         
  48:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #if (QuadDec_Motor_Cnt8_UsingFixedFunction)
  49:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_CONTROL &= QuadDec_Motor_Cnt8_CTRL_ENABLE;
  51:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
  52:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Clear the mode bits for continuous run mode */
  53:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #if (CY_PSOC5A)
  54:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                 QuadDec_Motor_Cnt8_CONTROL2 &= ((uint8)(~QuadDec_Motor_Cnt8_CTRL_MODE_MASK));
  55:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #endif /* (CY_PSOC5A) */
  56:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                 QuadDec_Motor_Cnt8_CONTROL3 &= ((uint8)(~QuadDec_Motor_Cnt8_CTRL_MODE_MASK));      
  58:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #if (QuadDec_Motor_Cnt8_RunModeUsed != 0x0u)
  61:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                 QuadDec_Motor_Cnt8_CONTROL |= QuadDec_Motor_Cnt8_ONESHOT;
  63:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #endif /* (QuadDec_Motor_Cnt8_RunModeUsed != 0x0u) */
  64:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
  65:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Set the IRQ to use the status register interrupts */
  66:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_CONTROL2 |= QuadDec_Motor_Cnt8_CTRL2_IRQ_SEL;
  67:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
  68:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_RT1 &= ((uint8)(~QuadDec_Motor_Cnt8_RT1_MASK));
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 3


  70:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_RT1 |= QuadDec_Motor_Cnt8_SYNC;     
  71:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                     
  72:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_RT1 &= ((uint8)(~QuadDec_Motor_Cnt8_SYNCDSI_MASK));
  74:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_RT1 |= QuadDec_Motor_Cnt8_SYNCDSI_EN;
  75:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
  76:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #else
  77:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #if(!QuadDec_Motor_Cnt8_ControlRegRemoved)
  78:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Set the default compare mode defined in the parameter */
  79:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             ctrl = QuadDec_Motor_Cnt8_CONTROL & ((uint8)(~QuadDec_Motor_Cnt8_CTRL_CMPMODE_MASK));
  46              		.loc 1 79 0
  47 0006 1B4B     		ldr	r3, .L2
  48 0008 1B78     		ldrb	r3, [r3]
  49 000a DBB2     		uxtb	r3, r3
  50 000c 23F00703 		bic	r3, r3, #7
  51 0010 FB71     		strb	r3, [r7, #7]
  80:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_CONTROL = ctrl | QuadDec_Motor_Cnt8_DEFAULT_COMPARE_MODE;
  52              		.loc 1 80 0
  53 0012 184A     		ldr	r2, .L2
  54 0014 FB79     		ldrb	r3, [r7, #7]
  55 0016 1370     		strb	r3, [r2]
  81:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
  82:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Set the default capture mode defined in the parameter */
  83:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             ctrl = QuadDec_Motor_Cnt8_CONTROL & ((uint8)(~QuadDec_Motor_Cnt8_CTRL_CAPMODE_MASK));
  56              		.loc 1 83 0
  57 0018 164B     		ldr	r3, .L2
  58 001a 1B78     		ldrb	r3, [r3]
  59 001c DBB2     		uxtb	r3, r3
  60 001e 23F00303 		bic	r3, r3, #3
  61 0022 FB71     		strb	r3, [r7, #7]
  84:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
  85:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #if( 0 != QuadDec_Motor_Cnt8_CAPTURE_MODE_CONF)
  86:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                 QuadDec_Motor_Cnt8_CONTROL = ctrl | QuadDec_Motor_Cnt8_DEFAULT_CAPTURE_MODE;
  87:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #else
  88:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                 QuadDec_Motor_Cnt8_CONTROL = ctrl;
  62              		.loc 1 88 0
  63 0024 134A     		ldr	r2, .L2
  64 0026 FB79     		ldrb	r3, [r7, #7]
  65 0028 1370     		strb	r3, [r2]
  89:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #endif /* 0 != QuadDec_Motor_Cnt8_CAPTURE_MODE */ 
  90:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
  91:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             #endif /* (!QuadDec_Motor_Cnt8_ControlRegRemoved) */
  92:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
  93:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         
  94:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         /* Clear all data in the FIFO's */
  95:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #if (!QuadDec_Motor_Cnt8_UsingFixedFunction)
  96:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_ClearFIFO();
  66              		.loc 1 96 0
  67 002a FFF7FEFF 		bl	QuadDec_Motor_Cnt8_ClearFIFO
  97:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #endif /* (!QuadDec_Motor_Cnt8_UsingFixedFunction) */
  98:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         
  99:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         /* Set Initial values from Configuration */
 100:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_WritePeriod(QuadDec_Motor_Cnt8_INIT_PERIOD_VALUE);
  68              		.loc 1 100 0
  69 002e 8020     		movs	r0, #128
  70 0030 FFF7FEFF 		bl	QuadDec_Motor_Cnt8_WritePeriod
 101:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #if (!(QuadDec_Motor_Cnt8_UsingFixedFunction && (CY_PSOC5A)))
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 4


 102:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_WriteCounter(QuadDec_Motor_Cnt8_INIT_COUNTER_VALUE);
  71              		.loc 1 102 0
  72 0034 8020     		movs	r0, #128
  73 0036 FFF7FEFF 		bl	QuadDec_Motor_Cnt8_WriteCounter
 103:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #endif /* (!(QuadDec_Motor_Cnt8_UsingFixedFunction && (CY_PSOC5A))) */
 104:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_SetInterruptMode(QuadDec_Motor_Cnt8_INIT_INTERRUPTS_MASK);
  74              		.loc 1 104 0
  75 003a 0020     		movs	r0, #0
  76 003c FFF7FEFF 		bl	QuadDec_Motor_Cnt8_SetInterruptMode
 105:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         
 106:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #if (!QuadDec_Motor_Cnt8_UsingFixedFunction)
 107:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Read the status register to clear the unwanted interrupts */
 108:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             (void)QuadDec_Motor_Cnt8_ReadStatusRegister();
  77              		.loc 1 108 0
  78 0040 FFF7FEFF 		bl	QuadDec_Motor_Cnt8_ReadStatusRegister
 109:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_WriteCompare(QuadDec_Motor_Cnt8_INIT_COMPARE_VALUE);
  79              		.loc 1 110 0
  80 0044 8020     		movs	r0, #128
  81 0046 FFF7FEFF 		bl	QuadDec_Motor_Cnt8_WriteCompare
 111:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
 113:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Enter Critical Region*/
 115:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_interruptState = CyEnterCriticalSection();
  82              		.loc 1 115 0
  83 004a FFF7FEFF 		bl	CyEnterCriticalSection
  84 004e 0346     		mov	r3, r0
  85 0050 BB71     		strb	r3, [r7, #6]
 116:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
 117:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             QuadDec_Motor_Cnt8_STATUS_AUX_CTRL |= QuadDec_Motor_Cnt8_STATUS_ACTL_INT_EN_MASK;
  86              		.loc 1 117 0
  87 0052 094A     		ldr	r2, .L2+4
  88 0054 084B     		ldr	r3, .L2+4
  89 0056 1B78     		ldrb	r3, [r3]
  90 0058 DBB2     		uxtb	r3, r3
  91 005a 43F01003 		orr	r3, r3, #16
  92 005e DBB2     		uxtb	r3, r3
  93 0060 1370     		strb	r3, [r2]
 118:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
 119:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             /* Exit Critical Region*/
 120:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             CyExitCriticalSection(QuadDec_Motor_Cnt8_interruptState);
  94              		.loc 1 120 0
  95 0062 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  96 0064 1846     		mov	r0, r3
  97 0066 FFF7FEFF 		bl	CyExitCriticalSection
 121:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****             
 122:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         #endif /* (!QuadDec_Motor_Cnt8_UsingFixedFunction) */
 123:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
  98              		.loc 1 123 0
  99 006a 00BF     		nop
 100 006c 0837     		adds	r7, r7, #8
 101              		.cfi_def_cfa_offset 8
 102 006e BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0070 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 5


 106              	.L3:
 107 0072 00BF     		.align	2
 108              	.L2:
 109 0074 7C640040 		.word	1073767548
 110 0078 9C640040 		.word	1073767580
 111              		.cfi_endproc
 112              	.LFE0:
 113              		.size	QuadDec_Motor_Cnt8_Init, .-QuadDec_Motor_Cnt8_Init
 114              		.section	.text.QuadDec_Motor_Cnt8_Enable,"ax",%progbits
 115              		.align	2
 116              		.global	QuadDec_Motor_Cnt8_Enable
 117              		.thumb
 118              		.thumb_func
 119              		.type	QuadDec_Motor_Cnt8_Enable, %function
 120              	QuadDec_Motor_Cnt8_Enable:
 121              	.LFB1:
 124:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 125:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 126:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 127:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_Enable
 128:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 129:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 130:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *     Enable the Counter
 131:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * 
 132:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 133:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void  
 134:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 135:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 136:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 137:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 138:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Side Effects: 
 139:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   on the operation of the counter.
 141:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 142:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_Enable(void) 
 144:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 122              		.loc 1 144 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127 0000 80B4     		push	{r7}
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if (QuadDec_Motor_Cnt8_UsingFixedFunction)
 147:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_GLOBAL_ENABLE |= QuadDec_Motor_Cnt8_BLOCK_EN_MASK;
 148:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_GLOBAL_STBY_ENABLE |= QuadDec_Motor_Cnt8_BLOCK_STBY_EN_MASK;
 149:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */  
 150:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         
 151:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Enable the counter from the control register  */
 152:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* else make sure reset is clear */
 154:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(!QuadDec_Motor_Cnt8_ControlRegRemoved || QuadDec_Motor_Cnt8_UsingFixedFunction)
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 6


 155:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_CONTROL |= QuadDec_Motor_Cnt8_CTRL_ENABLE;                
 132              		.loc 1 155 0
 133 0004 054A     		ldr	r2, .L5
 134 0006 054B     		ldr	r3, .L5
 135 0008 1B78     		ldrb	r3, [r3]
 136 000a DBB2     		uxtb	r3, r3
 137 000c 63F07F03 		orn	r3, r3, #127
 138 0010 DBB2     		uxtb	r3, r3
 139 0012 1370     		strb	r3, [r2]
 156:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (!QuadDec_Motor_Cnt8_ControlRegRemoved || QuadDec_Motor_Cnt8_UsingFixedFunction) */
 157:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     
 158:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 140              		.loc 1 158 0
 141 0014 00BF     		nop
 142 0016 BD46     		mov	sp, r7
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0018 80BC     		pop	{r7}
 146              		.cfi_restore 7
 147              		.cfi_def_cfa_offset 0
 148 001a 7047     		bx	lr
 149              	.L6:
 150              		.align	2
 151              	.L5:
 152 001c 7C640040 		.word	1073767548
 153              		.cfi_endproc
 154              	.LFE1:
 155              		.size	QuadDec_Motor_Cnt8_Enable, .-QuadDec_Motor_Cnt8_Enable
 156              		.section	.text.QuadDec_Motor_Cnt8_Start,"ax",%progbits
 157              		.align	2
 158              		.global	QuadDec_Motor_Cnt8_Start
 159              		.thumb
 160              		.thumb_func
 161              		.type	QuadDec_Motor_Cnt8_Start, %function
 162              	QuadDec_Motor_Cnt8_Start:
 163              	.LFB2:
 159:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 160:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 161:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 162:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_Start
 163:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 164:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 165:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  Enables the counter for operation 
 166:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 167:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 168:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void  
 169:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 170:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 171:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 172:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 173:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Global variables:
 174:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  QuadDec_Motor_Cnt8_initVar: Is modified when this function is called for the  
 175:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   first time. Is used to ensure that initialization happens only once.
 176:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 177:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_Start(void) 
 179:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 7


 164              		.loc 1 179 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 00AF     		add	r7, sp, #0
 173              		.cfi_def_cfa_register 7
 180:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     if(QuadDec_Motor_Cnt8_initVar == 0u)
 174              		.loc 1 180 0
 175 0004 064B     		ldr	r3, .L9
 176 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 177 0008 002B     		cmp	r3, #0
 178 000a 04D1     		bne	.L8
 181:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     {
 182:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_Init();
 179              		.loc 1 182 0
 180 000c FFF7FEFF 		bl	QuadDec_Motor_Cnt8_Init
 183:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         
 184:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_initVar = 1u; /* Clear this bit for Initialization */        
 181              		.loc 1 184 0
 182 0010 034B     		ldr	r3, .L9
 183 0012 0122     		movs	r2, #1
 184 0014 1A70     		strb	r2, [r3]
 185              	.L8:
 185:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     }
 186:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     
 187:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Enable the Counter */
 188:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     QuadDec_Motor_Cnt8_Enable();        
 186              		.loc 1 188 0
 187 0016 FFF7FEFF 		bl	QuadDec_Motor_Cnt8_Enable
 189:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 188              		.loc 1 189 0
 189 001a 00BF     		nop
 190 001c 80BD     		pop	{r7, pc}
 191              	.L10:
 192 001e 00BF     		.align	2
 193              	.L9:
 194 0020 00000000 		.word	QuadDec_Motor_Cnt8_initVar
 195              		.cfi_endproc
 196              	.LFE2:
 197              		.size	QuadDec_Motor_Cnt8_Start, .-QuadDec_Motor_Cnt8_Start
 198              		.section	.text.QuadDec_Motor_Cnt8_Stop,"ax",%progbits
 199              		.align	2
 200              		.global	QuadDec_Motor_Cnt8_Stop
 201              		.thumb
 202              		.thumb_func
 203              		.type	QuadDec_Motor_Cnt8_Stop, %function
 204              	QuadDec_Motor_Cnt8_Stop:
 205              	.LFB3:
 190:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 191:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 192:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 193:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_Stop
 194:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 8


 195:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 196:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 198:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 199:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void  
 200:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 201:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 202:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 203:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 204:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *               has no effect on the operation of the counter.
 206:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 207:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_Stop(void) 
 209:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 206              		.loc 1 209 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211 0000 80B4     		push	{r7}
 212              		.cfi_def_cfa_offset 4
 213              		.cfi_offset 7, -4
 214 0002 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 210:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Disable Counter */
 211:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(!QuadDec_Motor_Cnt8_ControlRegRemoved || QuadDec_Motor_Cnt8_UsingFixedFunction)
 212:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_CONTROL &= ((uint8)(~QuadDec_Motor_Cnt8_CTRL_ENABLE));        
 216              		.loc 1 212 0
 217 0004 054A     		ldr	r2, .L12
 218 0006 054B     		ldr	r3, .L12
 219 0008 1B78     		ldrb	r3, [r3]
 220 000a DBB2     		uxtb	r3, r3
 221 000c 03F07F03 		and	r3, r3, #127
 222 0010 DBB2     		uxtb	r3, r3
 223 0012 1370     		strb	r3, [r2]
 213:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (!QuadDec_Motor_Cnt8_ControlRegRemoved || QuadDec_Motor_Cnt8_UsingFixedFunction) */
 214:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     
 215:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Globally disable the Fixed Function Block chosen */
 216:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if (QuadDec_Motor_Cnt8_UsingFixedFunction)
 217:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_GLOBAL_ENABLE &= ((uint8)(~QuadDec_Motor_Cnt8_BLOCK_EN_MASK));
 218:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_GLOBAL_STBY_ENABLE &= ((uint8)(~QuadDec_Motor_Cnt8_BLOCK_STBY_EN_MASK));
 219:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 220:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 224              		.loc 1 220 0
 225 0014 00BF     		nop
 226 0016 BD46     		mov	sp, r7
 227              		.cfi_def_cfa_register 13
 228              		@ sp needed
 229 0018 80BC     		pop	{r7}
 230              		.cfi_restore 7
 231              		.cfi_def_cfa_offset 0
 232 001a 7047     		bx	lr
 233              	.L13:
 234              		.align	2
 235              	.L12:
 236 001c 7C640040 		.word	1073767548
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 9


 237              		.cfi_endproc
 238              	.LFE3:
 239              		.size	QuadDec_Motor_Cnt8_Stop, .-QuadDec_Motor_Cnt8_Stop
 240              		.section	.text.QuadDec_Motor_Cnt8_SetInterruptMode,"ax",%progbits
 241              		.align	2
 242              		.global	QuadDec_Motor_Cnt8_SetInterruptMode
 243              		.thumb
 244              		.thumb_func
 245              		.type	QuadDec_Motor_Cnt8_SetInterruptMode, %function
 246              	QuadDec_Motor_Cnt8_SetInterruptMode:
 247              	.LFB4:
 221:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 222:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 223:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_SetInterruptMode
 225:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 226:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 227:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 229:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 230:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *                   which will be allowed to generate the counters interrupt.   
 232:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 233:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 234:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 235:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 236:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_SetInterruptMode(uint8 interruptsMask) 
 238:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 248              		.loc 1 238 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 83B0     		sub	sp, sp, #12
 257              		.cfi_def_cfa_offset 16
 258 0004 00AF     		add	r7, sp, #0
 259              		.cfi_def_cfa_register 7
 260 0006 0346     		mov	r3, r0
 261 0008 FB71     		strb	r3, [r7, #7]
 239:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     QuadDec_Motor_Cnt8_STATUS_MASK = interruptsMask;
 262              		.loc 1 239 0
 263 000a 044A     		ldr	r2, .L15
 264 000c FB79     		ldrb	r3, [r7, #7]
 265 000e 1370     		strb	r3, [r2]
 240:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 266              		.loc 1 240 0
 267 0010 00BF     		nop
 268 0012 0C37     		adds	r7, r7, #12
 269              		.cfi_def_cfa_offset 4
 270 0014 BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0016 80BC     		pop	{r7}
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 10


 274              		.cfi_restore 7
 275              		.cfi_def_cfa_offset 0
 276 0018 7047     		bx	lr
 277              	.L16:
 278 001a 00BF     		.align	2
 279              	.L15:
 280 001c 8C640040 		.word	1073767564
 281              		.cfi_endproc
 282              	.LFE4:
 283              		.size	QuadDec_Motor_Cnt8_SetInterruptMode, .-QuadDec_Motor_Cnt8_SetInterruptMode
 284              		.section	.text.QuadDec_Motor_Cnt8_ReadStatusRegister,"ax",%progbits
 285              		.align	2
 286              		.global	QuadDec_Motor_Cnt8_ReadStatusRegister
 287              		.thumb
 288              		.thumb_func
 289              		.type	QuadDec_Motor_Cnt8_ReadStatusRegister, %function
 290              	QuadDec_Motor_Cnt8_ReadStatusRegister:
 291              	.LFB5:
 241:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 242:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 243:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 244:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_ReadStatusRegister
 245:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 246:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 247:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   Reads the status register and returns it's state. This function should use
 248:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *       defined types for the bit-field information as the bits in this
 249:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *       register may be permuteable.
 250:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 251:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 252:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 253:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 254:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 255:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  (uint8) The contents of the status register
 256:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 257:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Side Effects:
 258:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   Status register bits may be clear on read. 
 259:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 260:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** uint8   QuadDec_Motor_Cnt8_ReadStatusRegister(void) 
 262:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 292              		.loc 1 262 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0000 80B4     		push	{r7}
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 7, -4
 300 0002 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 263:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     return QuadDec_Motor_Cnt8_STATUS;
 302              		.loc 1 263 0
 303 0004 034B     		ldr	r3, .L19
 304 0006 1B78     		ldrb	r3, [r3]
 305 0008 DBB2     		uxtb	r3, r3
 264:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 306              		.loc 1 264 0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 11


 307 000a 1846     		mov	r0, r3
 308 000c BD46     		mov	sp, r7
 309              		.cfi_def_cfa_register 13
 310              		@ sp needed
 311 000e 80BC     		pop	{r7}
 312              		.cfi_restore 7
 313              		.cfi_def_cfa_offset 0
 314 0010 7047     		bx	lr
 315              	.L20:
 316 0012 00BF     		.align	2
 317              	.L19:
 318 0014 6C640040 		.word	1073767532
 319              		.cfi_endproc
 320              	.LFE5:
 321              		.size	QuadDec_Motor_Cnt8_ReadStatusRegister, .-QuadDec_Motor_Cnt8_ReadStatusRegister
 322              		.section	.text.QuadDec_Motor_Cnt8_ReadControlRegister,"ax",%progbits
 323              		.align	2
 324              		.global	QuadDec_Motor_Cnt8_ReadControlRegister
 325              		.thumb
 326              		.thumb_func
 327              		.type	QuadDec_Motor_Cnt8_ReadControlRegister, %function
 328              	QuadDec_Motor_Cnt8_ReadControlRegister:
 329              	.LFB6:
 265:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 266:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 267:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #if(!QuadDec_Motor_Cnt8_ControlRegRemoved)
 268:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_ReadControlRegister
 270:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 271:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 272:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   Reads the control register and returns it's state. This function should use
 273:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *       defined types for the bit-field information as the bits in this
 274:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *       register may be permuteable.
 275:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 276:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 277:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 278:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 279:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 280:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  (uint8) The contents of the control register
 281:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 282:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** uint8   QuadDec_Motor_Cnt8_ReadControlRegister(void) 
 284:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 330              		.loc 1 284 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              		.cfi_def_cfa_offset 4
 337              		.cfi_offset 7, -4
 338 0002 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 285:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     return QuadDec_Motor_Cnt8_CONTROL;
 340              		.loc 1 285 0
 341 0004 034B     		ldr	r3, .L23
 342 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 12


 343 0008 DBB2     		uxtb	r3, r3
 286:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 344              		.loc 1 286 0
 345 000a 1846     		mov	r0, r3
 346 000c BD46     		mov	sp, r7
 347              		.cfi_def_cfa_register 13
 348              		@ sp needed
 349 000e 80BC     		pop	{r7}
 350              		.cfi_restore 7
 351              		.cfi_def_cfa_offset 0
 352 0010 7047     		bx	lr
 353              	.L24:
 354 0012 00BF     		.align	2
 355              	.L23:
 356 0014 7C640040 		.word	1073767548
 357              		.cfi_endproc
 358              	.LFE6:
 359              		.size	QuadDec_Motor_Cnt8_ReadControlRegister, .-QuadDec_Motor_Cnt8_ReadControlRegister
 360              		.section	.text.QuadDec_Motor_Cnt8_WriteControlRegister,"ax",%progbits
 361              		.align	2
 362              		.global	QuadDec_Motor_Cnt8_WriteControlRegister
 363              		.thumb
 364              		.thumb_func
 365              		.type	QuadDec_Motor_Cnt8_WriteControlRegister, %function
 366              	QuadDec_Motor_Cnt8_WriteControlRegister:
 367              	.LFB7:
 287:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 288:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 289:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 290:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_WriteControlRegister
 291:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 292:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 293:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   Sets the bit-field of the control register.  This function should use
 294:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *       defined types for the bit-field information as the bits in this
 295:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *       register may be permuteable.
 296:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 297:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 298:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 299:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 300:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 301:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  (uint8) The contents of the control register
 302:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 303:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void    QuadDec_Motor_Cnt8_WriteControlRegister(uint8 control) 
 305:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 368              		.loc 1 305 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 0000 80B4     		push	{r7}
 374              		.cfi_def_cfa_offset 4
 375              		.cfi_offset 7, -4
 376 0002 83B0     		sub	sp, sp, #12
 377              		.cfi_def_cfa_offset 16
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 13


 380 0006 0346     		mov	r3, r0
 381 0008 FB71     		strb	r3, [r7, #7]
 306:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     QuadDec_Motor_Cnt8_CONTROL = control;
 382              		.loc 1 306 0
 383 000a 044A     		ldr	r2, .L26
 384 000c FB79     		ldrb	r3, [r7, #7]
 385 000e 1370     		strb	r3, [r2]
 307:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 386              		.loc 1 307 0
 387 0010 00BF     		nop
 388 0012 0C37     		adds	r7, r7, #12
 389              		.cfi_def_cfa_offset 4
 390 0014 BD46     		mov	sp, r7
 391              		.cfi_def_cfa_register 13
 392              		@ sp needed
 393 0016 80BC     		pop	{r7}
 394              		.cfi_restore 7
 395              		.cfi_def_cfa_offset 0
 396 0018 7047     		bx	lr
 397              	.L27:
 398 001a 00BF     		.align	2
 399              	.L26:
 400 001c 7C640040 		.word	1073767548
 401              		.cfi_endproc
 402              	.LFE7:
 403              		.size	QuadDec_Motor_Cnt8_WriteControlRegister, .-QuadDec_Motor_Cnt8_WriteControlRegister
 404              		.section	.text.QuadDec_Motor_Cnt8_WriteCounter,"ax",%progbits
 405              		.align	2
 406              		.global	QuadDec_Motor_Cnt8_WriteCounter
 407              		.thumb
 408              		.thumb_func
 409              		.type	QuadDec_Motor_Cnt8_WriteCounter, %function
 410              	QuadDec_Motor_Cnt8_WriteCounter:
 411              	.LFB8:
 308:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 309:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #endif  /* (!QuadDec_Motor_Cnt8_ControlRegRemoved) */
 310:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 311:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 312:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #if (!(QuadDec_Motor_Cnt8_UsingFixedFunction && (CY_PSOC5A)))
 313:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 314:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_WriteCounter
 315:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 316:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 317:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   This funtion is used to set the counter to a specific value
 318:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 319:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 320:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  counter:  New counter value. 
 321:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 322:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 323:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void 
 324:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 325:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_WriteCounter(uint8 counter) \
 327:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                                    
 328:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 412              		.loc 1 328 0
 413              		.cfi_startproc
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 14


 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 83B0     		sub	sp, sp, #12
 421              		.cfi_def_cfa_offset 16
 422 0004 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 424 0006 0346     		mov	r3, r0
 425 0008 FB71     		strb	r3, [r7, #7]
 329:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(QuadDec_Motor_Cnt8_UsingFixedFunction)
 330:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         /* assert if block is already enabled */
 331:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         CYASSERT (0u == (QuadDec_Motor_Cnt8_GLOBAL_ENABLE & QuadDec_Motor_Cnt8_BLOCK_EN_MASK));
 332:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         /* If block is disabled, enable it and then write the counter */
 333:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_GLOBAL_ENABLE |= QuadDec_Motor_Cnt8_BLOCK_EN_MASK;
 334:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         CY_SET_REG16(QuadDec_Motor_Cnt8_COUNTER_LSB_PTR, (uint16)counter);
 335:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         QuadDec_Motor_Cnt8_GLOBAL_ENABLE &= ((uint8)(~QuadDec_Motor_Cnt8_BLOCK_EN_MASK));
 336:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #else
 337:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         CY_SET_REG8(QuadDec_Motor_Cnt8_COUNTER_LSB_PTR, counter);
 426              		.loc 1 337 0
 427 000a 044A     		ldr	r2, .L29
 428 000c FB79     		ldrb	r3, [r7, #7]
 429 000e 1370     		strb	r3, [r2]
 338:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 339:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 430              		.loc 1 339 0
 431 0010 00BF     		nop
 432 0012 0C37     		adds	r7, r7, #12
 433              		.cfi_def_cfa_offset 4
 434 0014 BD46     		mov	sp, r7
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 0016 80BC     		pop	{r7}
 438              		.cfi_restore 7
 439              		.cfi_def_cfa_offset 0
 440 0018 7047     		bx	lr
 441              	.L30:
 442 001a 00BF     		.align	2
 443              	.L29:
 444 001c 0C640040 		.word	1073767436
 445              		.cfi_endproc
 446              	.LFE8:
 447              		.size	QuadDec_Motor_Cnt8_WriteCounter, .-QuadDec_Motor_Cnt8_WriteCounter
 448              		.section	.text.QuadDec_Motor_Cnt8_ReadCounter,"ax",%progbits
 449              		.align	2
 450              		.global	QuadDec_Motor_Cnt8_ReadCounter
 451              		.thumb
 452              		.thumb_func
 453              		.type	QuadDec_Motor_Cnt8_ReadCounter, %function
 454              	QuadDec_Motor_Cnt8_ReadCounter:
 455              	.LFB9:
 340:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #endif /* (!(QuadDec_Motor_Cnt8_UsingFixedFunction && (CY_PSOC5A))) */
 341:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 342:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 343:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 15


 344:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_ReadCounter
 345:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 346:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 347:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Returns the current value of the counter.  It doesn't matter
 348:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * if the counter is enabled or running.
 349:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 350:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 351:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void:  
 352:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 353:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 354:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  (uint8) The present value of the counter.
 355:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 356:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** uint8 QuadDec_Motor_Cnt8_ReadCounter(void) 
 358:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 456              		.loc 1 358 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              		.cfi_def_cfa_offset 4
 463              		.cfi_offset 7, -4
 464 0002 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 359:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Force capture by reading Accumulator */
 360:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Must first do a software capture to be able to read the counter */
 361:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(QuadDec_Motor_Cnt8_UsingFixedFunction)
 363:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 		(void)CY_GET_REG16(QuadDec_Motor_Cnt8_COUNTER_LSB_PTR);
 364:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 	#else
 365:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 		(void)CY_GET_REG8(QuadDec_Motor_Cnt8_COUNTER_LSB_PTR_8BIT);
 466              		.loc 1 365 0
 467 0004 044B     		ldr	r3, .L33
 468 0006 1B78     		ldrb	r3, [r3]
 366:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 	#endif/* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 367:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     
 368:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(QuadDec_Motor_Cnt8_UsingFixedFunction)
 370:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         return ((uint8)CY_GET_REG16(QuadDec_Motor_Cnt8_STATICCOUNT_LSB_PTR));
 371:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #else
 372:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         return (CY_GET_REG8(QuadDec_Motor_Cnt8_STATICCOUNT_LSB_PTR));
 469              		.loc 1 372 0
 470 0008 044B     		ldr	r3, .L33+4
 471 000a 1B78     		ldrb	r3, [r3]
 472 000c DBB2     		uxtb	r3, r3
 373:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 374:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 473              		.loc 1 374 0
 474 000e 1846     		mov	r0, r3
 475 0010 BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 0012 80BC     		pop	{r7}
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 0014 7047     		bx	lr
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 16


 482              	.L34:
 483 0016 00BF     		.align	2
 484              	.L33:
 485 0018 0C640040 		.word	1073767436
 486 001c 4C640040 		.word	1073767500
 487              		.cfi_endproc
 488              	.LFE9:
 489              		.size	QuadDec_Motor_Cnt8_ReadCounter, .-QuadDec_Motor_Cnt8_ReadCounter
 490              		.section	.text.QuadDec_Motor_Cnt8_ReadCapture,"ax",%progbits
 491              		.align	2
 492              		.global	QuadDec_Motor_Cnt8_ReadCapture
 493              		.thumb
 494              		.thumb_func
 495              		.type	QuadDec_Motor_Cnt8_ReadCapture, %function
 496              	QuadDec_Motor_Cnt8_ReadCapture:
 497              	.LFB10:
 375:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 376:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 377:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 378:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_ReadCapture
 379:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 380:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 381:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   This function returns the last value captured.
 382:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 383:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 384:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 385:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 386:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 387:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  (uint8) Present Capture value.
 388:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 389:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** uint8 QuadDec_Motor_Cnt8_ReadCapture(void) 
 391:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 498              		.loc 1 391 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503 0000 80B4     		push	{r7}
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 7, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 392:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(QuadDec_Motor_Cnt8_UsingFixedFunction)
 393:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         return ((uint8)CY_GET_REG16(QuadDec_Motor_Cnt8_STATICCOUNT_LSB_PTR));
 394:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #else
 395:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         return (CY_GET_REG8(QuadDec_Motor_Cnt8_STATICCOUNT_LSB_PTR));
 508              		.loc 1 395 0
 509 0004 034B     		ldr	r3, .L37
 510 0006 1B78     		ldrb	r3, [r3]
 511 0008 DBB2     		uxtb	r3, r3
 396:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 397:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 512              		.loc 1 397 0
 513 000a 1846     		mov	r0, r3
 514 000c BD46     		mov	sp, r7
 515              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 17


 516              		@ sp needed
 517 000e 80BC     		pop	{r7}
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0010 7047     		bx	lr
 521              	.L38:
 522 0012 00BF     		.align	2
 523              	.L37:
 524 0014 4C640040 		.word	1073767500
 525              		.cfi_endproc
 526              	.LFE10:
 527              		.size	QuadDec_Motor_Cnt8_ReadCapture, .-QuadDec_Motor_Cnt8_ReadCapture
 528              		.section	.text.QuadDec_Motor_Cnt8_WritePeriod,"ax",%progbits
 529              		.align	2
 530              		.global	QuadDec_Motor_Cnt8_WritePeriod
 531              		.thumb
 532              		.thumb_func
 533              		.type	QuadDec_Motor_Cnt8_WritePeriod, %function
 534              	QuadDec_Motor_Cnt8_WritePeriod:
 535              	.LFB11:
 398:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 399:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 400:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_WritePeriod
 402:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 403:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 404:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Changes the period of the counter.  The new period 
 405:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * will be loaded the next time terminal count is detected.
 406:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 407:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 408:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  period: (uint8) A value of 0 will result in
 409:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *         the counter remaining at zero.  
 410:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 411:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 412:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 413:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 414:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 415:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_WritePeriod(uint8 period) 
 416:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 536              		.loc 1 416 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0000 80B4     		push	{r7}
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0002 83B0     		sub	sp, sp, #12
 545              		.cfi_def_cfa_offset 16
 546 0004 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 548 0006 0346     		mov	r3, r0
 549 0008 FB71     		strb	r3, [r7, #7]
 417:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(QuadDec_Motor_Cnt8_UsingFixedFunction)
 418:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         CY_SET_REG16(QuadDec_Motor_Cnt8_PERIOD_LSB_PTR,(uint16)period);
 419:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #else
 420:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         CY_SET_REG8(QuadDec_Motor_Cnt8_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 18


 550              		.loc 1 420 0
 551 000a 044A     		ldr	r2, .L40
 552 000c FB79     		ldrb	r3, [r7, #7]
 553 000e 1370     		strb	r3, [r2]
 421:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 422:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 554              		.loc 1 422 0
 555 0010 00BF     		nop
 556 0012 0C37     		adds	r7, r7, #12
 557              		.cfi_def_cfa_offset 4
 558 0014 BD46     		mov	sp, r7
 559              		.cfi_def_cfa_register 13
 560              		@ sp needed
 561 0016 80BC     		pop	{r7}
 562              		.cfi_restore 7
 563              		.cfi_def_cfa_offset 0
 564 0018 7047     		bx	lr
 565              	.L41:
 566 001a 00BF     		.align	2
 567              	.L40:
 568 001c 2C640040 		.word	1073767468
 569              		.cfi_endproc
 570              	.LFE11:
 571              		.size	QuadDec_Motor_Cnt8_WritePeriod, .-QuadDec_Motor_Cnt8_WritePeriod
 572              		.section	.text.QuadDec_Motor_Cnt8_ReadPeriod,"ax",%progbits
 573              		.align	2
 574              		.global	QuadDec_Motor_Cnt8_ReadPeriod
 575              		.thumb
 576              		.thumb_func
 577              		.type	QuadDec_Motor_Cnt8_ReadPeriod, %function
 578              	QuadDec_Motor_Cnt8_ReadPeriod:
 579              	.LFB12:
 423:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 424:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 425:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_ReadPeriod
 427:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 428:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 429:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Reads the current period value without affecting counter operation.
 430:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 431:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 432:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void:  
 433:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 434:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 435:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  (uint8) Present period value.
 436:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 437:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 438:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** uint8 QuadDec_Motor_Cnt8_ReadPeriod(void) 
 439:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 580              		.loc 1 439 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585 0000 80B4     		push	{r7}
 586              		.cfi_def_cfa_offset 4
 587              		.cfi_offset 7, -4
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 19


 588 0002 00AF     		add	r7, sp, #0
 589              		.cfi_def_cfa_register 7
 440:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(QuadDec_Motor_Cnt8_UsingFixedFunction)
 441:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         return ((uint8)CY_GET_REG16(QuadDec_Motor_Cnt8_PERIOD_LSB_PTR));
 442:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #else
 443:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         return (CY_GET_REG8(QuadDec_Motor_Cnt8_PERIOD_LSB_PTR));
 590              		.loc 1 443 0
 591 0004 034B     		ldr	r3, .L44
 592 0006 1B78     		ldrb	r3, [r3]
 593 0008 DBB2     		uxtb	r3, r3
 444:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 445:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 594              		.loc 1 445 0
 595 000a 1846     		mov	r0, r3
 596 000c BD46     		mov	sp, r7
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 000e 80BC     		pop	{r7}
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0010 7047     		bx	lr
 603              	.L45:
 604 0012 00BF     		.align	2
 605              	.L44:
 606 0014 2C640040 		.word	1073767468
 607              		.cfi_endproc
 608              	.LFE12:
 609              		.size	QuadDec_Motor_Cnt8_ReadPeriod, .-QuadDec_Motor_Cnt8_ReadPeriod
 610              		.section	.text.QuadDec_Motor_Cnt8_WriteCompare,"ax",%progbits
 611              		.align	2
 612              		.global	QuadDec_Motor_Cnt8_WriteCompare
 613              		.thumb
 614              		.thumb_func
 615              		.type	QuadDec_Motor_Cnt8_WriteCompare, %function
 616              	QuadDec_Motor_Cnt8_WriteCompare:
 617              	.LFB13:
 446:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 447:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 448:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #if (!QuadDec_Motor_Cnt8_UsingFixedFunction)
 449:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 450:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_WriteCompare
 451:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 452:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 453:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Changes the compare value.  The compare output will 
 454:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * driven high when the present counter value compares true based on the 
 456:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * configured compare mode setting. 
 457:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 458:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 459:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  Compare:  New compare value. 
 460:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 461:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 462:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 463:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 464:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_WriteCompare(uint8 compare) \
 466:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****                                    
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 20


 467:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 618              		.loc 1 467 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 83B0     		sub	sp, sp, #12
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 630 0006 0346     		mov	r3, r0
 631 0008 FB71     		strb	r3, [r7, #7]
 468:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #if(QuadDec_Motor_Cnt8_UsingFixedFunction)
 469:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         CY_SET_REG16(QuadDec_Motor_Cnt8_COMPARE_LSB_PTR, (uint16)compare);
 470:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #else
 471:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         CY_SET_REG8(QuadDec_Motor_Cnt8_COMPARE_LSB_PTR, compare);
 632              		.loc 1 471 0
 633 000a 044A     		ldr	r2, .L47
 634 000c FB79     		ldrb	r3, [r7, #7]
 635 000e 1370     		strb	r3, [r2]
 472:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     #endif /* (QuadDec_Motor_Cnt8_UsingFixedFunction) */
 473:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 636              		.loc 1 473 0
 637 0010 00BF     		nop
 638 0012 0C37     		adds	r7, r7, #12
 639              		.cfi_def_cfa_offset 4
 640 0014 BD46     		mov	sp, r7
 641              		.cfi_def_cfa_register 13
 642              		@ sp needed
 643 0016 80BC     		pop	{r7}
 644              		.cfi_restore 7
 645              		.cfi_def_cfa_offset 0
 646 0018 7047     		bx	lr
 647              	.L48:
 648 001a 00BF     		.align	2
 649              	.L47:
 650 001c 3C640040 		.word	1073767484
 651              		.cfi_endproc
 652              	.LFE13:
 653              		.size	QuadDec_Motor_Cnt8_WriteCompare, .-QuadDec_Motor_Cnt8_WriteCompare
 654              		.section	.text.QuadDec_Motor_Cnt8_ReadCompare,"ax",%progbits
 655              		.align	2
 656              		.global	QuadDec_Motor_Cnt8_ReadCompare
 657              		.thumb
 658              		.thumb_func
 659              		.type	QuadDec_Motor_Cnt8_ReadCompare, %function
 660              	QuadDec_Motor_Cnt8_ReadCompare:
 661              	.LFB14:
 474:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 475:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 476:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 477:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_ReadCompare
 478:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 479:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 21


 480:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Returns the compare value.
 481:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 482:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 483:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void:
 484:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 485:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 486:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  (uint8) Present compare value.
 487:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 488:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 489:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** uint8 QuadDec_Motor_Cnt8_ReadCompare(void) 
 490:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 662              		.loc 1 490 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 0000 80B4     		push	{r7}
 668              		.cfi_def_cfa_offset 4
 669              		.cfi_offset 7, -4
 670 0002 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 491:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     return (CY_GET_REG8(QuadDec_Motor_Cnt8_COMPARE_LSB_PTR));
 672              		.loc 1 491 0
 673 0004 034B     		ldr	r3, .L51
 674 0006 1B78     		ldrb	r3, [r3]
 675 0008 DBB2     		uxtb	r3, r3
 492:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 676              		.loc 1 492 0
 677 000a 1846     		mov	r0, r3
 678 000c BD46     		mov	sp, r7
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 000e 80BC     		pop	{r7}
 682              		.cfi_restore 7
 683              		.cfi_def_cfa_offset 0
 684 0010 7047     		bx	lr
 685              	.L52:
 686 0012 00BF     		.align	2
 687              	.L51:
 688 0014 3C640040 		.word	1073767484
 689              		.cfi_endproc
 690              	.LFE14:
 691              		.size	QuadDec_Motor_Cnt8_ReadCompare, .-QuadDec_Motor_Cnt8_ReadCompare
 692              		.section	.text.QuadDec_Motor_Cnt8_ClearFIFO,"ax",%progbits
 693              		.align	2
 694              		.global	QuadDec_Motor_Cnt8_ClearFIFO
 695              		.thumb
 696              		.thumb_func
 697              		.type	QuadDec_Motor_Cnt8_ClearFIFO, %function
 698              	QuadDec_Motor_Cnt8_ClearFIFO:
 699              	.LFB15:
 493:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 494:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 495:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #if (QuadDec_Motor_Cnt8_COMPARE_MODE_SOFTWARE)
 496:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_SetCompareMode
 498:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 22


 499:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 500:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  Sets the software controlled Compare Mode.
 501:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 502:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:
 503:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 505:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return:
 506:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 507:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 508:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 509:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_SetCompareMode(uint8 compareMode) 
 510:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 511:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Clear the compare mode bits in the control register */
 512:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     QuadDec_Motor_Cnt8_CONTROL &= ((uint8)(~QuadDec_Motor_Cnt8_CTRL_CMPMODE_MASK));
 513:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     
 514:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Write the new setting */
 515:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     QuadDec_Motor_Cnt8_CONTROL |= compareMode;
 516:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 517:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #endif  /* (QuadDec_Motor_Cnt8_COMPARE_MODE_SOFTWARE) */
 518:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 519:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 520:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #if (QuadDec_Motor_Cnt8_CAPTURE_MODE_SOFTWARE)
 521:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 522:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_SetCaptureMode
 523:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 524:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 525:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  Sets the software controlled Capture Mode.
 526:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 527:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:
 528:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 530:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return:
 531:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void
 532:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 533:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 534:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_SetCaptureMode(uint8 captureMode) 
 535:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 536:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Clear the capture mode bits in the control register */
 537:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     QuadDec_Motor_Cnt8_CONTROL &= ((uint8)(~QuadDec_Motor_Cnt8_CTRL_CAPMODE_MASK));
 538:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     
 539:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     /* Write the new setting */
 540:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     QuadDec_Motor_Cnt8_CONTROL |= ((uint8)((uint8)captureMode << QuadDec_Motor_Cnt8_CTRL_CAPMODE0_S
 541:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 542:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** #endif  /* (QuadDec_Motor_Cnt8_CAPTURE_MODE_SOFTWARE) */
 543:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 544:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 545:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** /*******************************************************************************
 546:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Function Name: QuadDec_Motor_Cnt8_ClearFIFO
 547:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** ********************************************************************************
 548:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Summary:
 549:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *   This function clears all capture data from the capture FIFO
 550:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 551:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Parameters:  
 552:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  void:
 553:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 554:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** * Return: 
 555:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *  None
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 23


 556:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *
 557:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** *******************************************************************************/
 558:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** void QuadDec_Motor_Cnt8_ClearFIFO(void) 
 559:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** {
 700              		.loc 1 559 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 560:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 561:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     while(0u != (QuadDec_Motor_Cnt8_ReadStatusRegister() & QuadDec_Motor_Cnt8_STATUS_FIFONEMP))
 710              		.loc 1 561 0
 711 0004 01E0     		b	.L54
 712              	.L55:
 562:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     {
 563:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****         (void)QuadDec_Motor_Cnt8_ReadCapture();
 713              		.loc 1 563 0
 714 0006 FFF7FEFF 		bl	QuadDec_Motor_Cnt8_ReadCapture
 715              	.L54:
 561:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     {
 716              		.loc 1 561 0
 717 000a FFF7FEFF 		bl	QuadDec_Motor_Cnt8_ReadStatusRegister
 718 000e 0346     		mov	r3, r0
 719 0010 03F04003 		and	r3, r3, #64
 720 0014 002B     		cmp	r3, #0
 721 0016 F6D1     		bne	.L55
 564:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c ****     }
 565:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** 
 566:Generated_Source\PSoC5/QuadDec_Motor_Cnt8.c **** }
 722              		.loc 1 566 0
 723 0018 00BF     		nop
 724 001a 80BD     		pop	{r7, pc}
 725              		.cfi_endproc
 726              	.LFE15:
 727              		.size	QuadDec_Motor_Cnt8_ClearFIFO, .-QuadDec_Motor_Cnt8_ClearFIFO
 728              		.text
 729              	.Letext0:
 730              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 731              		.section	.debug_info,"",%progbits
 732              	.Ldebug_info0:
 733 0000 70020000 		.4byte	0x270
 734 0004 0400     		.2byte	0x4
 735 0006 00000000 		.4byte	.Ldebug_abbrev0
 736 000a 04       		.byte	0x4
 737 000b 01       		.uleb128 0x1
 738 000c 28000000 		.4byte	.LASF39
 739 0010 0C       		.byte	0xc
 740 0011 BE010000 		.4byte	.LASF40
 741 0015 83020000 		.4byte	.LASF41
 742 0019 00000000 		.4byte	.Ldebug_ranges0+0
 743 001d 00000000 		.4byte	0
 744 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 24


 745 0025 02       		.uleb128 0x2
 746 0026 01       		.byte	0x1
 747 0027 06       		.byte	0x6
 748 0028 91030000 		.4byte	.LASF0
 749 002c 02       		.uleb128 0x2
 750 002d 01       		.byte	0x1
 751 002e 08       		.byte	0x8
 752 002f 44010000 		.4byte	.LASF1
 753 0033 02       		.uleb128 0x2
 754 0034 02       		.byte	0x2
 755 0035 05       		.byte	0x5
 756 0036 3B030000 		.4byte	.LASF2
 757 003a 02       		.uleb128 0x2
 758 003b 02       		.byte	0x2
 759 003c 07       		.byte	0x7
 760 003d 03010000 		.4byte	.LASF3
 761 0041 02       		.uleb128 0x2
 762 0042 04       		.byte	0x4
 763 0043 05       		.byte	0x5
 764 0044 7C030000 		.4byte	.LASF4
 765 0048 02       		.uleb128 0x2
 766 0049 04       		.byte	0x4
 767 004a 07       		.byte	0x7
 768 004b 57010000 		.4byte	.LASF5
 769 004f 02       		.uleb128 0x2
 770 0050 08       		.byte	0x8
 771 0051 05       		.byte	0x5
 772 0052 CA020000 		.4byte	.LASF6
 773 0056 02       		.uleb128 0x2
 774 0057 08       		.byte	0x8
 775 0058 07       		.byte	0x7
 776 0059 24020000 		.4byte	.LASF7
 777 005d 03       		.uleb128 0x3
 778 005e 04       		.byte	0x4
 779 005f 05       		.byte	0x5
 780 0060 696E7400 		.ascii	"int\000"
 781 0064 02       		.uleb128 0x2
 782 0065 04       		.byte	0x4
 783 0066 07       		.byte	0x7
 784 0067 17020000 		.4byte	.LASF8
 785 006b 04       		.uleb128 0x4
 786 006c 69010000 		.4byte	.LASF12
 787 0070 02       		.byte	0x2
 788 0071 9201     		.2byte	0x192
 789 0073 2C000000 		.4byte	0x2c
 790 0077 02       		.uleb128 0x2
 791 0078 04       		.byte	0x4
 792 0079 04       		.byte	0x4
 793 007a 36010000 		.4byte	.LASF9
 794 007e 02       		.uleb128 0x2
 795 007f 08       		.byte	0x8
 796 0080 04       		.byte	0x4
 797 0081 EA010000 		.4byte	.LASF10
 798 0085 02       		.uleb128 0x2
 799 0086 01       		.byte	0x1
 800 0087 08       		.byte	0x8
 801 0088 E1020000 		.4byte	.LASF11
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 25


 802 008c 04       		.uleb128 0x4
 803 008d 52010000 		.4byte	.LASF13
 804 0091 02       		.byte	0x2
 805 0092 3C02     		.2byte	0x23c
 806 0094 98000000 		.4byte	0x98
 807 0098 05       		.uleb128 0x5
 808 0099 6B000000 		.4byte	0x6b
 809 009d 02       		.uleb128 0x2
 810 009e 08       		.byte	0x8
 811 009f 04       		.byte	0x4
 812 00a0 85030000 		.4byte	.LASF14
 813 00a4 02       		.uleb128 0x2
 814 00a5 04       		.byte	0x4
 815 00a6 07       		.byte	0x7
 816 00a7 D8020000 		.4byte	.LASF15
 817 00ab 06       		.uleb128 0x6
 818 00ac A5030000 		.4byte	.LASF21
 819 00b0 01       		.byte	0x1
 820 00b1 25       		.byte	0x25
 821 00b2 00000000 		.4byte	.LFB0
 822 00b6 7C000000 		.4byte	.LFE0-.LFB0
 823 00ba 01       		.uleb128 0x1
 824 00bb 9C       		.byte	0x9c
 825 00bc DD000000 		.4byte	0xdd
 826 00c0 07       		.uleb128 0x7
 827 00c1 7E020000 		.4byte	.LASF16
 828 00c5 01       		.byte	0x1
 829 00c6 28       		.byte	0x28
 830 00c7 6B000000 		.4byte	0x6b
 831 00cb 02       		.uleb128 0x2
 832 00cc 91       		.byte	0x91
 833 00cd 77       		.sleb128 -9
 834 00ce 07       		.uleb128 0x7
 835 00cf DD030000 		.4byte	.LASF17
 836 00d3 01       		.byte	0x1
 837 00d4 2D       		.byte	0x2d
 838 00d5 6B000000 		.4byte	0x6b
 839 00d9 02       		.uleb128 0x2
 840 00da 91       		.byte	0x91
 841 00db 76       		.sleb128 -10
 842 00dc 00       		.byte	0
 843 00dd 08       		.uleb128 0x8
 844 00de 62030000 		.4byte	.LASF18
 845 00e2 01       		.byte	0x1
 846 00e3 8F       		.byte	0x8f
 847 00e4 00000000 		.4byte	.LFB1
 848 00e8 20000000 		.4byte	.LFE1-.LFB1
 849 00ec 01       		.uleb128 0x1
 850 00ed 9C       		.byte	0x9c
 851 00ee 09       		.uleb128 0x9
 852 00ef 86010000 		.4byte	.LASF19
 853 00f3 01       		.byte	0x1
 854 00f4 B2       		.byte	0xb2
 855 00f5 00000000 		.4byte	.LFB2
 856 00f9 24000000 		.4byte	.LFE2-.LFB2
 857 00fd 01       		.uleb128 0x1
 858 00fe 9C       		.byte	0x9c
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 26


 859 00ff 08       		.uleb128 0x8
 860 0100 04030000 		.4byte	.LASF20
 861 0104 01       		.byte	0x1
 862 0105 D0       		.byte	0xd0
 863 0106 00000000 		.4byte	.LFB3
 864 010a 20000000 		.4byte	.LFE3-.LFB3
 865 010e 01       		.uleb128 0x1
 866 010f 9C       		.byte	0x9c
 867 0110 0A       		.uleb128 0xa
 868 0111 5A020000 		.4byte	.LASF22
 869 0115 01       		.byte	0x1
 870 0116 ED       		.byte	0xed
 871 0117 00000000 		.4byte	.LFB4
 872 011b 20000000 		.4byte	.LFE4-.LFB4
 873 011f 01       		.uleb128 0x1
 874 0120 9C       		.byte	0x9c
 875 0121 34010000 		.4byte	0x134
 876 0125 0B       		.uleb128 0xb
 877 0126 77010000 		.4byte	.LASF26
 878 012a 01       		.byte	0x1
 879 012b ED       		.byte	0xed
 880 012c 6B000000 		.4byte	0x6b
 881 0130 02       		.uleb128 0x2
 882 0131 91       		.byte	0x91
 883 0132 77       		.sleb128 -9
 884 0133 00       		.byte	0
 885 0134 0C       		.uleb128 0xc
 886 0135 F1010000 		.4byte	.LASF23
 887 0139 01       		.byte	0x1
 888 013a 0501     		.2byte	0x105
 889 013c 6B000000 		.4byte	0x6b
 890 0140 00000000 		.4byte	.LFB5
 891 0144 18000000 		.4byte	.LFE5-.LFB5
 892 0148 01       		.uleb128 0x1
 893 0149 9C       		.byte	0x9c
 894 014a 0C       		.uleb128 0xc
 895 014b B6000000 		.4byte	.LASF24
 896 014f 01       		.byte	0x1
 897 0150 1B01     		.2byte	0x11b
 898 0152 6B000000 		.4byte	0x6b
 899 0156 00000000 		.4byte	.LFB6
 900 015a 18000000 		.4byte	.LFE6-.LFB6
 901 015e 01       		.uleb128 0x1
 902 015f 9C       		.byte	0x9c
 903 0160 0D       		.uleb128 0xd
 904 0161 00000000 		.4byte	.LASF25
 905 0165 01       		.byte	0x1
 906 0166 3001     		.2byte	0x130
 907 0168 00000000 		.4byte	.LFB7
 908 016c 20000000 		.4byte	.LFE7-.LFB7
 909 0170 01       		.uleb128 0x1
 910 0171 9C       		.byte	0x9c
 911 0172 86010000 		.4byte	0x186
 912 0176 0E       		.uleb128 0xe
 913 0177 6F010000 		.4byte	.LASF27
 914 017b 01       		.byte	0x1
 915 017c 3001     		.2byte	0x130
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 27


 916 017e 6B000000 		.4byte	0x6b
 917 0182 02       		.uleb128 0x2
 918 0183 91       		.byte	0x91
 919 0184 77       		.sleb128 -9
 920 0185 00       		.byte	0
 921 0186 0D       		.uleb128 0xd
 922 0187 BD030000 		.4byte	.LASF28
 923 018b 01       		.byte	0x1
 924 018c 4601     		.2byte	0x146
 925 018e 00000000 		.4byte	.LFB8
 926 0192 20000000 		.4byte	.LFE8-.LFB8
 927 0196 01       		.uleb128 0x1
 928 0197 9C       		.byte	0x9c
 929 0198 AC010000 		.4byte	0x1ac
 930 019c 0E       		.uleb128 0xe
 931 019d 3C010000 		.4byte	.LASF29
 932 01a1 01       		.byte	0x1
 933 01a2 4601     		.2byte	0x146
 934 01a4 6B000000 		.4byte	0x6b
 935 01a8 02       		.uleb128 0x2
 936 01a9 91       		.byte	0x91
 937 01aa 77       		.sleb128 -9
 938 01ab 00       		.byte	0
 939 01ac 0C       		.uleb128 0xc
 940 01ad 1C030000 		.4byte	.LASF30
 941 01b1 01       		.byte	0x1
 942 01b2 6501     		.2byte	0x165
 943 01b4 6B000000 		.4byte	0x6b
 944 01b8 00000000 		.4byte	.LFB9
 945 01bc 20000000 		.4byte	.LFE9-.LFB9
 946 01c0 01       		.uleb128 0x1
 947 01c1 9C       		.byte	0x9c
 948 01c2 0C       		.uleb128 0xc
 949 01c3 3B020000 		.4byte	.LASF31
 950 01c7 01       		.byte	0x1
 951 01c8 8601     		.2byte	0x186
 952 01ca 6B000000 		.4byte	0x6b
 953 01ce 00000000 		.4byte	.LFB10
 954 01d2 18000000 		.4byte	.LFE10-.LFB10
 955 01d6 01       		.uleb128 0x1
 956 01d7 9C       		.byte	0x9c
 957 01d8 0D       		.uleb128 0xd
 958 01d9 DD000000 		.4byte	.LASF32
 959 01dd 01       		.byte	0x1
 960 01de 9F01     		.2byte	0x19f
 961 01e0 00000000 		.4byte	.LFB11
 962 01e4 20000000 		.4byte	.LFE11-.LFB11
 963 01e8 01       		.uleb128 0x1
 964 01e9 9C       		.byte	0x9c
 965 01ea FE010000 		.4byte	0x1fe
 966 01ee 0E       		.uleb128 0xe
 967 01ef FC000000 		.4byte	.LASF33
 968 01f3 01       		.byte	0x1
 969 01f4 9F01     		.2byte	0x19f
 970 01f6 6B000000 		.4byte	0x6b
 971 01fa 02       		.uleb128 0x2
 972 01fb 91       		.byte	0x91
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 28


 973 01fc 77       		.sleb128 -9
 974 01fd 00       		.byte	0
 975 01fe 0C       		.uleb128 0xc
 976 01ff E6020000 		.4byte	.LASF34
 977 0203 01       		.byte	0x1
 978 0204 B601     		.2byte	0x1b6
 979 0206 6B000000 		.4byte	0x6b
 980 020a 00000000 		.4byte	.LFB12
 981 020e 18000000 		.4byte	.LFE12-.LFB12
 982 0212 01       		.uleb128 0x1
 983 0213 9C       		.byte	0x9c
 984 0214 0D       		.uleb128 0xd
 985 0215 16010000 		.4byte	.LASF35
 986 0219 01       		.byte	0x1
 987 021a D101     		.2byte	0x1d1
 988 021c 00000000 		.4byte	.LFB13
 989 0220 20000000 		.4byte	.LFE13-.LFB13
 990 0224 01       		.uleb128 0x1
 991 0225 9C       		.byte	0x9c
 992 0226 3A020000 		.4byte	0x23a
 993 022a 0E       		.uleb128 0xe
 994 022b 9D030000 		.4byte	.LASF36
 995 022f 01       		.byte	0x1
 996 0230 D101     		.2byte	0x1d1
 997 0232 6B000000 		.4byte	0x6b
 998 0236 02       		.uleb128 0x2
 999 0237 91       		.byte	0x91
 1000 0238 77       		.sleb128 -9
 1001 0239 00       		.byte	0
 1002 023a 0C       		.uleb128 0xc
 1003 023b 9F010000 		.4byte	.LASF37
 1004 023f 01       		.byte	0x1
 1005 0240 E901     		.2byte	0x1e9
 1006 0242 6B000000 		.4byte	0x6b
 1007 0246 00000000 		.4byte	.LFB14
 1008 024a 18000000 		.4byte	.LFE14-.LFB14
 1009 024e 01       		.uleb128 0x1
 1010 024f 9C       		.byte	0x9c
 1011 0250 0F       		.uleb128 0xf
 1012 0251 45030000 		.4byte	.LASF38
 1013 0255 01       		.byte	0x1
 1014 0256 2E02     		.2byte	0x22e
 1015 0258 00000000 		.4byte	.LFB15
 1016 025c 1C000000 		.4byte	.LFE15-.LFB15
 1017 0260 01       		.uleb128 0x1
 1018 0261 9C       		.byte	0x9c
 1019 0262 10       		.uleb128 0x10
 1020 0263 AF020000 		.4byte	.LASF42
 1021 0267 01       		.byte	0x1
 1022 0268 15       		.byte	0x15
 1023 0269 6B000000 		.4byte	0x6b
 1024 026d 05       		.uleb128 0x5
 1025 026e 03       		.byte	0x3
 1026 026f 00000000 		.4byte	QuadDec_Motor_Cnt8_initVar
 1027 0273 00       		.byte	0
 1028              		.section	.debug_abbrev,"",%progbits
 1029              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 29


 1030 0000 01       		.uleb128 0x1
 1031 0001 11       		.uleb128 0x11
 1032 0002 01       		.byte	0x1
 1033 0003 25       		.uleb128 0x25
 1034 0004 0E       		.uleb128 0xe
 1035 0005 13       		.uleb128 0x13
 1036 0006 0B       		.uleb128 0xb
 1037 0007 03       		.uleb128 0x3
 1038 0008 0E       		.uleb128 0xe
 1039 0009 1B       		.uleb128 0x1b
 1040 000a 0E       		.uleb128 0xe
 1041 000b 55       		.uleb128 0x55
 1042 000c 17       		.uleb128 0x17
 1043 000d 11       		.uleb128 0x11
 1044 000e 01       		.uleb128 0x1
 1045 000f 10       		.uleb128 0x10
 1046 0010 17       		.uleb128 0x17
 1047 0011 00       		.byte	0
 1048 0012 00       		.byte	0
 1049 0013 02       		.uleb128 0x2
 1050 0014 24       		.uleb128 0x24
 1051 0015 00       		.byte	0
 1052 0016 0B       		.uleb128 0xb
 1053 0017 0B       		.uleb128 0xb
 1054 0018 3E       		.uleb128 0x3e
 1055 0019 0B       		.uleb128 0xb
 1056 001a 03       		.uleb128 0x3
 1057 001b 0E       		.uleb128 0xe
 1058 001c 00       		.byte	0
 1059 001d 00       		.byte	0
 1060 001e 03       		.uleb128 0x3
 1061 001f 24       		.uleb128 0x24
 1062 0020 00       		.byte	0
 1063 0021 0B       		.uleb128 0xb
 1064 0022 0B       		.uleb128 0xb
 1065 0023 3E       		.uleb128 0x3e
 1066 0024 0B       		.uleb128 0xb
 1067 0025 03       		.uleb128 0x3
 1068 0026 08       		.uleb128 0x8
 1069 0027 00       		.byte	0
 1070 0028 00       		.byte	0
 1071 0029 04       		.uleb128 0x4
 1072 002a 16       		.uleb128 0x16
 1073 002b 00       		.byte	0
 1074 002c 03       		.uleb128 0x3
 1075 002d 0E       		.uleb128 0xe
 1076 002e 3A       		.uleb128 0x3a
 1077 002f 0B       		.uleb128 0xb
 1078 0030 3B       		.uleb128 0x3b
 1079 0031 05       		.uleb128 0x5
 1080 0032 49       		.uleb128 0x49
 1081 0033 13       		.uleb128 0x13
 1082 0034 00       		.byte	0
 1083 0035 00       		.byte	0
 1084 0036 05       		.uleb128 0x5
 1085 0037 35       		.uleb128 0x35
 1086 0038 00       		.byte	0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 30


 1087 0039 49       		.uleb128 0x49
 1088 003a 13       		.uleb128 0x13
 1089 003b 00       		.byte	0
 1090 003c 00       		.byte	0
 1091 003d 06       		.uleb128 0x6
 1092 003e 2E       		.uleb128 0x2e
 1093 003f 01       		.byte	0x1
 1094 0040 3F       		.uleb128 0x3f
 1095 0041 19       		.uleb128 0x19
 1096 0042 03       		.uleb128 0x3
 1097 0043 0E       		.uleb128 0xe
 1098 0044 3A       		.uleb128 0x3a
 1099 0045 0B       		.uleb128 0xb
 1100 0046 3B       		.uleb128 0x3b
 1101 0047 0B       		.uleb128 0xb
 1102 0048 27       		.uleb128 0x27
 1103 0049 19       		.uleb128 0x19
 1104 004a 11       		.uleb128 0x11
 1105 004b 01       		.uleb128 0x1
 1106 004c 12       		.uleb128 0x12
 1107 004d 06       		.uleb128 0x6
 1108 004e 40       		.uleb128 0x40
 1109 004f 18       		.uleb128 0x18
 1110 0050 9642     		.uleb128 0x2116
 1111 0052 19       		.uleb128 0x19
 1112 0053 01       		.uleb128 0x1
 1113 0054 13       		.uleb128 0x13
 1114 0055 00       		.byte	0
 1115 0056 00       		.byte	0
 1116 0057 07       		.uleb128 0x7
 1117 0058 34       		.uleb128 0x34
 1118 0059 00       		.byte	0
 1119 005a 03       		.uleb128 0x3
 1120 005b 0E       		.uleb128 0xe
 1121 005c 3A       		.uleb128 0x3a
 1122 005d 0B       		.uleb128 0xb
 1123 005e 3B       		.uleb128 0x3b
 1124 005f 0B       		.uleb128 0xb
 1125 0060 49       		.uleb128 0x49
 1126 0061 13       		.uleb128 0x13
 1127 0062 02       		.uleb128 0x2
 1128 0063 18       		.uleb128 0x18
 1129 0064 00       		.byte	0
 1130 0065 00       		.byte	0
 1131 0066 08       		.uleb128 0x8
 1132 0067 2E       		.uleb128 0x2e
 1133 0068 00       		.byte	0
 1134 0069 3F       		.uleb128 0x3f
 1135 006a 19       		.uleb128 0x19
 1136 006b 03       		.uleb128 0x3
 1137 006c 0E       		.uleb128 0xe
 1138 006d 3A       		.uleb128 0x3a
 1139 006e 0B       		.uleb128 0xb
 1140 006f 3B       		.uleb128 0x3b
 1141 0070 0B       		.uleb128 0xb
 1142 0071 27       		.uleb128 0x27
 1143 0072 19       		.uleb128 0x19
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 31


 1144 0073 11       		.uleb128 0x11
 1145 0074 01       		.uleb128 0x1
 1146 0075 12       		.uleb128 0x12
 1147 0076 06       		.uleb128 0x6
 1148 0077 40       		.uleb128 0x40
 1149 0078 18       		.uleb128 0x18
 1150 0079 9742     		.uleb128 0x2117
 1151 007b 19       		.uleb128 0x19
 1152 007c 00       		.byte	0
 1153 007d 00       		.byte	0
 1154 007e 09       		.uleb128 0x9
 1155 007f 2E       		.uleb128 0x2e
 1156 0080 00       		.byte	0
 1157 0081 3F       		.uleb128 0x3f
 1158 0082 19       		.uleb128 0x19
 1159 0083 03       		.uleb128 0x3
 1160 0084 0E       		.uleb128 0xe
 1161 0085 3A       		.uleb128 0x3a
 1162 0086 0B       		.uleb128 0xb
 1163 0087 3B       		.uleb128 0x3b
 1164 0088 0B       		.uleb128 0xb
 1165 0089 27       		.uleb128 0x27
 1166 008a 19       		.uleb128 0x19
 1167 008b 11       		.uleb128 0x11
 1168 008c 01       		.uleb128 0x1
 1169 008d 12       		.uleb128 0x12
 1170 008e 06       		.uleb128 0x6
 1171 008f 40       		.uleb128 0x40
 1172 0090 18       		.uleb128 0x18
 1173 0091 9642     		.uleb128 0x2116
 1174 0093 19       		.uleb128 0x19
 1175 0094 00       		.byte	0
 1176 0095 00       		.byte	0
 1177 0096 0A       		.uleb128 0xa
 1178 0097 2E       		.uleb128 0x2e
 1179 0098 01       		.byte	0x1
 1180 0099 3F       		.uleb128 0x3f
 1181 009a 19       		.uleb128 0x19
 1182 009b 03       		.uleb128 0x3
 1183 009c 0E       		.uleb128 0xe
 1184 009d 3A       		.uleb128 0x3a
 1185 009e 0B       		.uleb128 0xb
 1186 009f 3B       		.uleb128 0x3b
 1187 00a0 0B       		.uleb128 0xb
 1188 00a1 27       		.uleb128 0x27
 1189 00a2 19       		.uleb128 0x19
 1190 00a3 11       		.uleb128 0x11
 1191 00a4 01       		.uleb128 0x1
 1192 00a5 12       		.uleb128 0x12
 1193 00a6 06       		.uleb128 0x6
 1194 00a7 40       		.uleb128 0x40
 1195 00a8 18       		.uleb128 0x18
 1196 00a9 9742     		.uleb128 0x2117
 1197 00ab 19       		.uleb128 0x19
 1198 00ac 01       		.uleb128 0x1
 1199 00ad 13       		.uleb128 0x13
 1200 00ae 00       		.byte	0
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 32


 1201 00af 00       		.byte	0
 1202 00b0 0B       		.uleb128 0xb
 1203 00b1 05       		.uleb128 0x5
 1204 00b2 00       		.byte	0
 1205 00b3 03       		.uleb128 0x3
 1206 00b4 0E       		.uleb128 0xe
 1207 00b5 3A       		.uleb128 0x3a
 1208 00b6 0B       		.uleb128 0xb
 1209 00b7 3B       		.uleb128 0x3b
 1210 00b8 0B       		.uleb128 0xb
 1211 00b9 49       		.uleb128 0x49
 1212 00ba 13       		.uleb128 0x13
 1213 00bb 02       		.uleb128 0x2
 1214 00bc 18       		.uleb128 0x18
 1215 00bd 00       		.byte	0
 1216 00be 00       		.byte	0
 1217 00bf 0C       		.uleb128 0xc
 1218 00c0 2E       		.uleb128 0x2e
 1219 00c1 00       		.byte	0
 1220 00c2 3F       		.uleb128 0x3f
 1221 00c3 19       		.uleb128 0x19
 1222 00c4 03       		.uleb128 0x3
 1223 00c5 0E       		.uleb128 0xe
 1224 00c6 3A       		.uleb128 0x3a
 1225 00c7 0B       		.uleb128 0xb
 1226 00c8 3B       		.uleb128 0x3b
 1227 00c9 05       		.uleb128 0x5
 1228 00ca 27       		.uleb128 0x27
 1229 00cb 19       		.uleb128 0x19
 1230 00cc 49       		.uleb128 0x49
 1231 00cd 13       		.uleb128 0x13
 1232 00ce 11       		.uleb128 0x11
 1233 00cf 01       		.uleb128 0x1
 1234 00d0 12       		.uleb128 0x12
 1235 00d1 06       		.uleb128 0x6
 1236 00d2 40       		.uleb128 0x40
 1237 00d3 18       		.uleb128 0x18
 1238 00d4 9742     		.uleb128 0x2117
 1239 00d6 19       		.uleb128 0x19
 1240 00d7 00       		.byte	0
 1241 00d8 00       		.byte	0
 1242 00d9 0D       		.uleb128 0xd
 1243 00da 2E       		.uleb128 0x2e
 1244 00db 01       		.byte	0x1
 1245 00dc 3F       		.uleb128 0x3f
 1246 00dd 19       		.uleb128 0x19
 1247 00de 03       		.uleb128 0x3
 1248 00df 0E       		.uleb128 0xe
 1249 00e0 3A       		.uleb128 0x3a
 1250 00e1 0B       		.uleb128 0xb
 1251 00e2 3B       		.uleb128 0x3b
 1252 00e3 05       		.uleb128 0x5
 1253 00e4 27       		.uleb128 0x27
 1254 00e5 19       		.uleb128 0x19
 1255 00e6 11       		.uleb128 0x11
 1256 00e7 01       		.uleb128 0x1
 1257 00e8 12       		.uleb128 0x12
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 33


 1258 00e9 06       		.uleb128 0x6
 1259 00ea 40       		.uleb128 0x40
 1260 00eb 18       		.uleb128 0x18
 1261 00ec 9742     		.uleb128 0x2117
 1262 00ee 19       		.uleb128 0x19
 1263 00ef 01       		.uleb128 0x1
 1264 00f0 13       		.uleb128 0x13
 1265 00f1 00       		.byte	0
 1266 00f2 00       		.byte	0
 1267 00f3 0E       		.uleb128 0xe
 1268 00f4 05       		.uleb128 0x5
 1269 00f5 00       		.byte	0
 1270 00f6 03       		.uleb128 0x3
 1271 00f7 0E       		.uleb128 0xe
 1272 00f8 3A       		.uleb128 0x3a
 1273 00f9 0B       		.uleb128 0xb
 1274 00fa 3B       		.uleb128 0x3b
 1275 00fb 05       		.uleb128 0x5
 1276 00fc 49       		.uleb128 0x49
 1277 00fd 13       		.uleb128 0x13
 1278 00fe 02       		.uleb128 0x2
 1279 00ff 18       		.uleb128 0x18
 1280 0100 00       		.byte	0
 1281 0101 00       		.byte	0
 1282 0102 0F       		.uleb128 0xf
 1283 0103 2E       		.uleb128 0x2e
 1284 0104 00       		.byte	0
 1285 0105 3F       		.uleb128 0x3f
 1286 0106 19       		.uleb128 0x19
 1287 0107 03       		.uleb128 0x3
 1288 0108 0E       		.uleb128 0xe
 1289 0109 3A       		.uleb128 0x3a
 1290 010a 0B       		.uleb128 0xb
 1291 010b 3B       		.uleb128 0x3b
 1292 010c 05       		.uleb128 0x5
 1293 010d 27       		.uleb128 0x27
 1294 010e 19       		.uleb128 0x19
 1295 010f 11       		.uleb128 0x11
 1296 0110 01       		.uleb128 0x1
 1297 0111 12       		.uleb128 0x12
 1298 0112 06       		.uleb128 0x6
 1299 0113 40       		.uleb128 0x40
 1300 0114 18       		.uleb128 0x18
 1301 0115 9642     		.uleb128 0x2116
 1302 0117 19       		.uleb128 0x19
 1303 0118 00       		.byte	0
 1304 0119 00       		.byte	0
 1305 011a 10       		.uleb128 0x10
 1306 011b 34       		.uleb128 0x34
 1307 011c 00       		.byte	0
 1308 011d 03       		.uleb128 0x3
 1309 011e 0E       		.uleb128 0xe
 1310 011f 3A       		.uleb128 0x3a
 1311 0120 0B       		.uleb128 0xb
 1312 0121 3B       		.uleb128 0x3b
 1313 0122 0B       		.uleb128 0xb
 1314 0123 49       		.uleb128 0x49
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 34


 1315 0124 13       		.uleb128 0x13
 1316 0125 3F       		.uleb128 0x3f
 1317 0126 19       		.uleb128 0x19
 1318 0127 02       		.uleb128 0x2
 1319 0128 18       		.uleb128 0x18
 1320 0129 00       		.byte	0
 1321 012a 00       		.byte	0
 1322 012b 00       		.byte	0
 1323              		.section	.debug_aranges,"",%progbits
 1324 0000 94000000 		.4byte	0x94
 1325 0004 0200     		.2byte	0x2
 1326 0006 00000000 		.4byte	.Ldebug_info0
 1327 000a 04       		.byte	0x4
 1328 000b 00       		.byte	0
 1329 000c 0000     		.2byte	0
 1330 000e 0000     		.2byte	0
 1331 0010 00000000 		.4byte	.LFB0
 1332 0014 7C000000 		.4byte	.LFE0-.LFB0
 1333 0018 00000000 		.4byte	.LFB1
 1334 001c 20000000 		.4byte	.LFE1-.LFB1
 1335 0020 00000000 		.4byte	.LFB2
 1336 0024 24000000 		.4byte	.LFE2-.LFB2
 1337 0028 00000000 		.4byte	.LFB3
 1338 002c 20000000 		.4byte	.LFE3-.LFB3
 1339 0030 00000000 		.4byte	.LFB4
 1340 0034 20000000 		.4byte	.LFE4-.LFB4
 1341 0038 00000000 		.4byte	.LFB5
 1342 003c 18000000 		.4byte	.LFE5-.LFB5
 1343 0040 00000000 		.4byte	.LFB6
 1344 0044 18000000 		.4byte	.LFE6-.LFB6
 1345 0048 00000000 		.4byte	.LFB7
 1346 004c 20000000 		.4byte	.LFE7-.LFB7
 1347 0050 00000000 		.4byte	.LFB8
 1348 0054 20000000 		.4byte	.LFE8-.LFB8
 1349 0058 00000000 		.4byte	.LFB9
 1350 005c 20000000 		.4byte	.LFE9-.LFB9
 1351 0060 00000000 		.4byte	.LFB10
 1352 0064 18000000 		.4byte	.LFE10-.LFB10
 1353 0068 00000000 		.4byte	.LFB11
 1354 006c 20000000 		.4byte	.LFE11-.LFB11
 1355 0070 00000000 		.4byte	.LFB12
 1356 0074 18000000 		.4byte	.LFE12-.LFB12
 1357 0078 00000000 		.4byte	.LFB13
 1358 007c 20000000 		.4byte	.LFE13-.LFB13
 1359 0080 00000000 		.4byte	.LFB14
 1360 0084 18000000 		.4byte	.LFE14-.LFB14
 1361 0088 00000000 		.4byte	.LFB15
 1362 008c 1C000000 		.4byte	.LFE15-.LFB15
 1363 0090 00000000 		.4byte	0
 1364 0094 00000000 		.4byte	0
 1365              		.section	.debug_ranges,"",%progbits
 1366              	.Ldebug_ranges0:
 1367 0000 00000000 		.4byte	.LFB0
 1368 0004 7C000000 		.4byte	.LFE0
 1369 0008 00000000 		.4byte	.LFB1
 1370 000c 20000000 		.4byte	.LFE1
 1371 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 35


 1372 0014 24000000 		.4byte	.LFE2
 1373 0018 00000000 		.4byte	.LFB3
 1374 001c 20000000 		.4byte	.LFE3
 1375 0020 00000000 		.4byte	.LFB4
 1376 0024 20000000 		.4byte	.LFE4
 1377 0028 00000000 		.4byte	.LFB5
 1378 002c 18000000 		.4byte	.LFE5
 1379 0030 00000000 		.4byte	.LFB6
 1380 0034 18000000 		.4byte	.LFE6
 1381 0038 00000000 		.4byte	.LFB7
 1382 003c 20000000 		.4byte	.LFE7
 1383 0040 00000000 		.4byte	.LFB8
 1384 0044 20000000 		.4byte	.LFE8
 1385 0048 00000000 		.4byte	.LFB9
 1386 004c 20000000 		.4byte	.LFE9
 1387 0050 00000000 		.4byte	.LFB10
 1388 0054 18000000 		.4byte	.LFE10
 1389 0058 00000000 		.4byte	.LFB11
 1390 005c 20000000 		.4byte	.LFE11
 1391 0060 00000000 		.4byte	.LFB12
 1392 0064 18000000 		.4byte	.LFE12
 1393 0068 00000000 		.4byte	.LFB13
 1394 006c 20000000 		.4byte	.LFE13
 1395 0070 00000000 		.4byte	.LFB14
 1396 0074 18000000 		.4byte	.LFE14
 1397 0078 00000000 		.4byte	.LFB15
 1398 007c 1C000000 		.4byte	.LFE15
 1399 0080 00000000 		.4byte	0
 1400 0084 00000000 		.4byte	0
 1401              		.section	.debug_line,"",%progbits
 1402              	.Ldebug_line0:
 1403 0000 8C010000 		.section	.debug_str,"MS",%progbits,1
 1403      02004F00 
 1403      00000201 
 1403      FB0E0D00 
 1403      01010101 
 1404              	.LASF25:
 1405 0000 51756164 		.ascii	"QuadDec_Motor_Cnt8_WriteControlRegister\000"
 1405      4465635F 
 1405      4D6F746F 
 1405      725F436E 
 1405      74385F57 
 1406              	.LASF39:
 1407 0028 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1407      43313120 
 1407      352E342E 
 1407      31203230 
 1407      31363036 
 1408 005b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1408      20726576 
 1408      6973696F 
 1408      6E203233 
 1408      37373135 
 1409 008e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1409      66756E63 
 1409      74696F6E 
 1409      2D736563 
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 36


 1409      74696F6E 
 1410              	.LASF24:
 1411 00b6 51756164 		.ascii	"QuadDec_Motor_Cnt8_ReadControlRegister\000"
 1411      4465635F 
 1411      4D6F746F 
 1411      725F436E 
 1411      74385F52 
 1412              	.LASF32:
 1413 00dd 51756164 		.ascii	"QuadDec_Motor_Cnt8_WritePeriod\000"
 1413      4465635F 
 1413      4D6F746F 
 1413      725F436E 
 1413      74385F57 
 1414              	.LASF33:
 1415 00fc 70657269 		.ascii	"period\000"
 1415      6F6400
 1416              	.LASF3:
 1417 0103 73686F72 		.ascii	"short unsigned int\000"
 1417      7420756E 
 1417      7369676E 
 1417      65642069 
 1417      6E7400
 1418              	.LASF35:
 1419 0116 51756164 		.ascii	"QuadDec_Motor_Cnt8_WriteCompare\000"
 1419      4465635F 
 1419      4D6F746F 
 1419      725F436E 
 1419      74385F57 
 1420              	.LASF9:
 1421 0136 666C6F61 		.ascii	"float\000"
 1421      7400
 1422              	.LASF29:
 1423 013c 636F756E 		.ascii	"counter\000"
 1423      74657200 
 1424              	.LASF1:
 1425 0144 756E7369 		.ascii	"unsigned char\000"
 1425      676E6564 
 1425      20636861 
 1425      7200
 1426              	.LASF13:
 1427 0152 72656738 		.ascii	"reg8\000"
 1427      00
 1428              	.LASF5:
 1429 0157 6C6F6E67 		.ascii	"long unsigned int\000"
 1429      20756E73 
 1429      69676E65 
 1429      6420696E 
 1429      7400
 1430              	.LASF12:
 1431 0169 75696E74 		.ascii	"uint8\000"
 1431      3800
 1432              	.LASF27:
 1433 016f 636F6E74 		.ascii	"control\000"
 1433      726F6C00 
 1434              	.LASF26:
 1435 0177 696E7465 		.ascii	"interruptsMask\000"
 1435      72727570 
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 37


 1435      74734D61 
 1435      736B00
 1436              	.LASF19:
 1437 0186 51756164 		.ascii	"QuadDec_Motor_Cnt8_Start\000"
 1437      4465635F 
 1437      4D6F746F 
 1437      725F436E 
 1437      74385F53 
 1438              	.LASF37:
 1439 019f 51756164 		.ascii	"QuadDec_Motor_Cnt8_ReadCompare\000"
 1439      4465635F 
 1439      4D6F746F 
 1439      725F436E 
 1439      74385F52 
 1440              	.LASF40:
 1441 01be 47656E65 		.ascii	"Generated_Source\\PSoC5\\QuadDec_Motor_Cnt8.c\000"
 1441      72617465 
 1441      645F536F 
 1441      75726365 
 1441      5C50536F 
 1442              	.LASF10:
 1443 01ea 646F7562 		.ascii	"double\000"
 1443      6C6500
 1444              	.LASF23:
 1445 01f1 51756164 		.ascii	"QuadDec_Motor_Cnt8_ReadStatusRegister\000"
 1445      4465635F 
 1445      4D6F746F 
 1445      725F436E 
 1445      74385F52 
 1446              	.LASF8:
 1447 0217 756E7369 		.ascii	"unsigned int\000"
 1447      676E6564 
 1447      20696E74 
 1447      00
 1448              	.LASF7:
 1449 0224 6C6F6E67 		.ascii	"long long unsigned int\000"
 1449      206C6F6E 
 1449      6720756E 
 1449      7369676E 
 1449      65642069 
 1450              	.LASF31:
 1451 023b 51756164 		.ascii	"QuadDec_Motor_Cnt8_ReadCapture\000"
 1451      4465635F 
 1451      4D6F746F 
 1451      725F436E 
 1451      74385F52 
 1452              	.LASF22:
 1453 025a 51756164 		.ascii	"QuadDec_Motor_Cnt8_SetInterruptMode\000"
 1453      4465635F 
 1453      4D6F746F 
 1453      725F436E 
 1453      74385F53 
 1454              	.LASF16:
 1455 027e 6374726C 		.ascii	"ctrl\000"
 1455      00
 1456              	.LASF41:
 1457 0283 433A5C55 		.ascii	"C:\\Users\\Albert\\Documents\\6115_fp\\IWP.cydsn\000"
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 38


 1457      73657273 
 1457      5C416C62 
 1457      6572745C 
 1457      446F6375 
 1458              	.LASF42:
 1459 02af 51756164 		.ascii	"QuadDec_Motor_Cnt8_initVar\000"
 1459      4465635F 
 1459      4D6F746F 
 1459      725F436E 
 1459      74385F69 
 1460              	.LASF6:
 1461 02ca 6C6F6E67 		.ascii	"long long int\000"
 1461      206C6F6E 
 1461      6720696E 
 1461      7400
 1462              	.LASF15:
 1463 02d8 73697A65 		.ascii	"sizetype\000"
 1463      74797065 
 1463      00
 1464              	.LASF11:
 1465 02e1 63686172 		.ascii	"char\000"
 1465      00
 1466              	.LASF34:
 1467 02e6 51756164 		.ascii	"QuadDec_Motor_Cnt8_ReadPeriod\000"
 1467      4465635F 
 1467      4D6F746F 
 1467      725F436E 
 1467      74385F52 
 1468              	.LASF20:
 1469 0304 51756164 		.ascii	"QuadDec_Motor_Cnt8_Stop\000"
 1469      4465635F 
 1469      4D6F746F 
 1469      725F436E 
 1469      74385F53 
 1470              	.LASF30:
 1471 031c 51756164 		.ascii	"QuadDec_Motor_Cnt8_ReadCounter\000"
 1471      4465635F 
 1471      4D6F746F 
 1471      725F436E 
 1471      74385F52 
 1472              	.LASF2:
 1473 033b 73686F72 		.ascii	"short int\000"
 1473      7420696E 
 1473      7400
 1474              	.LASF38:
 1475 0345 51756164 		.ascii	"QuadDec_Motor_Cnt8_ClearFIFO\000"
 1475      4465635F 
 1475      4D6F746F 
 1475      725F436E 
 1475      74385F43 
 1476              	.LASF18:
 1477 0362 51756164 		.ascii	"QuadDec_Motor_Cnt8_Enable\000"
 1477      4465635F 
 1477      4D6F746F 
 1477      725F436E 
 1477      74385F45 
 1478              	.LASF4:
ARM GAS  C:\Users\Albert\AppData\Local\Temp\ccCswgCp.s 			page 39


 1479 037c 6C6F6E67 		.ascii	"long int\000"
 1479      20696E74 
 1479      00
 1480              	.LASF14:
 1481 0385 6C6F6E67 		.ascii	"long double\000"
 1481      20646F75 
 1481      626C6500 
 1482              	.LASF0:
 1483 0391 7369676E 		.ascii	"signed char\000"
 1483      65642063 
 1483      68617200 
 1484              	.LASF36:
 1485 039d 636F6D70 		.ascii	"compare\000"
 1485      61726500 
 1486              	.LASF21:
 1487 03a5 51756164 		.ascii	"QuadDec_Motor_Cnt8_Init\000"
 1487      4465635F 
 1487      4D6F746F 
 1487      725F436E 
 1487      74385F49 
 1488              	.LASF28:
 1489 03bd 51756164 		.ascii	"QuadDec_Motor_Cnt8_WriteCounter\000"
 1489      4465635F 
 1489      4D6F746F 
 1489      725F436E 
 1489      74385F57 
 1490              	.LASF17:
 1491 03dd 51756164 		.ascii	"QuadDec_Motor_Cnt8_interruptState\000"
 1491      4465635F 
 1491      4D6F746F 
 1491      725F436E 
 1491      74385F69 
 1492              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
